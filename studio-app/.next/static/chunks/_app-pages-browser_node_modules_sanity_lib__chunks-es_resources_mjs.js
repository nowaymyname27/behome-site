"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_sanity_lib__chunks-es_resources_mjs"],{

/***/ "(app-pages-browser)/../node_modules/sanity/lib/_chunks-es/resources.mjs":
/*!***********************************************************!*\
  !*** ../node_modules/sanity/lib/_chunks-es/resources.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ commentsLocaleStrings)\n/* harmony export */ });\n/* harmony import */ var _index_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../index.mjs */ \"(app-pages-browser)/../node_modules/sanity/lib/index.mjs\");\n\n\n\nconst commentsLocaleStrings = (0,_index_mjs__WEBPACK_IMPORTED_MODULE_0__.defineLocalesResources)(\"comments\", {\n    /** The close comments button text */ \"close-pane-button-text\": \"Close comments\",\n    /** The aria label for the close comments button */ \"close-pane-button-text-aria-label\": \"Close comments\",\n    /** When composing a comment, the placeholder text shown when adding a comment to a field with no current comments */ \"compose.add-comment-input-placeholder\": \"Add comment to <strong>{{field}}</strong>\",\n    /** When composing a comment, the placeholder text shown when adding a comment to a field with no current comments and the mode is upsell */ \"compose.add-comment-input-placeholder-upsell\": \"Upgrade to add comment\",\n    /** When composing a comment, the placeholder text shown when the input is empty */ \"compose.create-comment-placeholder\": \"Create a new comment\",\n    /** When composing a comment, the aria label for the button to mention a user */ \"compose.mention-user-aria-label\": \"Mention user\",\n    /** When composing a comment, the tooltip text for the button to mention a user */ \"compose.mention-user-tooltip\": \"Mention user\",\n    /** When composing a reply, the placeholder text shown when the input is empty */ \"compose.reply-placeholder\": \"Reply\",\n    /** When composing a reply, the placeholder text shown when the input is empty and the mode is upsell */ \"compose.reply-placeholder-upsell\": \"Upgrade to reply\",\n    /** When composing a comment, the aria label for the button to send a comment */ \"compose.send-comment-aria-label\": \"Send comment\",\n    /** When composing a comment, the tooltip text for the button to send a comment */ \"compose.send-comment-tooltip\": \"Send comment\",\n    /** The inspector text when error copying link */ \"copy-link-error-message\": \"Unable to copy link to clipboard\",\n    /** The delete dialog body for a comment */ \"delete-comment.body\": \"Once deleted, a comment cannot be recovered.\",\n    /** The delete dialog confirm button text for a comment */ \"delete-comment.confirm\": \"Delete comment\",\n    /** The delete dialog title for a comment */ \"delete-comment.title\": \"Delete this comment?\",\n    /** The delete dialog error */ \"delete-dialog.error\": \"An error occurred while deleting the comment. Please try again.\",\n    /** The delete dialog body for a thread */ \"delete-thread.body\": \"This comment and its replies will be deleted, and once deleted cannot be recovered.\",\n    /** The delete dialog conform button text for a thread */ \"delete-thread.confirm\": \"Delete thread\",\n    /** The delete dialog title for a thread */ \"delete-thread.title\": \"Delete this comment thread?\",\n    /** The button text for confirming discard */ \"discard.button-confirm\": \"Discard\",\n    /** The header for discard comment dialog */ \"discard.header\": \"Discard comment?\",\n    /** The text for discard comment dialog */ \"discard.text\": \"Do you want to discard the comment?\",\n    /** Sharing feedback on the comments feature: The link title */ \"feature-feedback.link\": \"Share your feedback\",\n    /** Sharing feedback on the comments feature: The form title  */ \"feature-feedback.title\": \"Help improve \",\n    /** The name of the comments feature, for use in header. Capitalized, eg \"Comments\". */ \"feature-name\": \"Comments\",\n    /** Aria label for button above fields to add a comment, when the field currently do not have any comments */ \"field-button.aria-label-add\": \"Add comment\",\n    /** Aria label for button above fields that opens the comments for this field, when there are existing comments */ \"field-button.aria-label-open\": \"Open comments\",\n    /** Text shown in popover when hovering the button above fields that opens the comments panel, when there is a single comment present */ \"field-button.content_one\": \"View comment\",\n    /** Text shown in popover when hovering the button above fields that opens the comments panel, when there are more than one comment present */ \"field-button.content_other\": \"View comments\",\n    /** Text shown in popover when hovering the button above fields to add a comment, when the field currently do not have any comments */ \"field-button.title\": \"Add comment\",\n    /* The text shown in the inline comment button when the button is disabled due to overlap */ \"inline-add-comment-button.disabled-overlap-title\": \"Comments cannot overlap\",\n    /** The text shown in the inline comment button */ \"inline-add-comment-button.title\": \"Add comment\",\n    /** Aria label for the breadcrumb button showing the field path. `{{field}}` is the last (most specific) field. */ \"list-item.breadcrumb-button-go-to-field-aria-label\": \"Go to {{field}} field\",\n    /** The button tooltip content for the add reaction button */ \"list-item.context-menu-add-reaction\": \"Add reaction\",\n    /** The button tooltip aria label for adding a reaction */ \"list-item.context-menu-add-reaction-aria-label\": \"Add reaction\",\n    /** The button tooltip content for the add reaction button and mode is upsell */ \"list-item.context-menu-add-reaction-upsell\": \"Upgrade to add reaction\",\n    /** The action menu item for copying a comment link */ \"list-item.copy-link\": \"Copy link to comment\",\n    /** The action menu item for deleting a comment */ \"list-item.delete-comment\": \"Delete comment\",\n    /** The action menu item for editing a comment */ \"list-item.edit-comment\": \"Edit comment\",\n    /** The action menu item for editing a comment and the mode is upsell */ \"list-item.edit-comment-upsell\": \"Upgrade to edit comment\",\n    /** Aria label for the button that takes you to the field, which wraps a thread/comment */ \"list-item.go-to-field-button.aria-label\": \"Go to field\",\n    /**\n   * The text shown below the author and timestamp of a comment including a link back to the context in which the comment was made.\n   * Consists of a document title wrapped in a link, and a word or phrase to indicate that the link refers to a location:\n   * eg \"on Home\", \"on Coffee Machine | Products\", \"on Pricing – Sanity\"\n   */ \"list-item.layout-context\": \"on <IntentLink>{{title}}</IntentLink>\",\n    /** The marker to indicate that a comment has been edited in brackets */ \"list-item.layout-edited\": \"edited\",\n    /** The error text when sending a comment has failed */ \"list-item.layout-failed-sent\": \"Failed to send.\",\n    /** The loading message when posting a comment is in progress */ \"list-item.layout-posting\": \"Posting...\",\n    /** The text for retrying posting a comment */ \"list-item.layout-retry\": \"Retry\",\n    /** The text shown when the value a comment references has been deleted */ \"list-item.missing-referenced-value-tooltip-content\": \"The commented text has been deleted\",\n    /** The aria label for the comments menu button to open the actions menu */ \"list-item.open-menu-aria-label\": \"Open comment actions menu\",\n    /** The button text to re-open a resolved comment  */ \"list-item.re-open-resolved\": \"Re-open\",\n    /** The button aria label to re-open a comment that is resolved */ \"list-item.re-open-resolved-aria-label\": \"Re-open\",\n    /** The button aria label to mark a comment as resolved */ \"list-item.resolved-tooltip-aria-label\": \"Mark comment as resolved\",\n    /** The button text to mark a comment as resolved */ \"list-item.resolved-tooltip-content\": \"Mark as resolved\",\n    /** The empty state text for open comments */ \"list-status.empty-state-open-text\": \"Open comments on this document will be shown here.\",\n    /** The empty state title for open comments */ \"list-status.empty-state-open-title\": \"No open comments yet\",\n    /** The empty state text for resolved comments */ \"list-status.empty-state-resolved-text\": \"Resolved comments on this document will be shown here.\",\n    /** The empty state title for resolved comments */ \"list-status.empty-state-resolved-title\": \"No resolved comments yet\",\n    /** The list status message for error */ \"list-status.error\": \"Something went wrong\",\n    /** The list status message for loading status */ \"list-status.loading\": \"Loading comments\",\n    /** Text shown when no users can be found to mention */ \"mentions.no-users-found\": \"No users found\",\n    /** Label/badge shown for users that are not authorized to see the document, and thus cannot be mentioned */ \"mentions.unauthorized-user\": \"Unauthorized\",\n    /** Aria label for the command list for users to mention */ \"mentions.user-list-aria-label\": \"List of users to mention\",\n    /** The comments onboarding popover text */ \"onboarding.body\": \"You can add comments to any field in a document. They'll show up here, grouped by field.\",\n    /** The comments onboarding dismiss text */ \"onboarding.dismiss\": \"Got it\",\n    /** The comments onboarding popover header text */ \"onboarding.header\": \"Document fields now have comments\",\n    /** Tooltip for the button to add a reaction to a comment */ \"reactions.add-reaction-tooltip\": \"Add reaction\",\n    /** Aria label for the individual reactions you can choose from when reacting to a comment */ \"reactions.react-with-aria-label\": \"React with {{reactionName}}\",\n    /** When a users' name cannot be resolved, fall back to this name */ \"reactions.user-list.unknown-user-fallback-name\": \"Unknown user\",\n    /**\n   * When showing list of users who have reacted, replaces your own name with \"you\", eg\n   * \"Donna, you, James, and Tyler reacted with 👍\". A different key (`_leading` suffix)\n   * is used when you are the first to react, eg \"You, Donna and Tyler reacted with 👍\".\n   * Use `{{name}}` if you want to instead use the current users' actual name.\n   */ \"reactions.user-list.you\": \"you\",\n    /**\n   * When showing list of users who have reacted, replaces your own name with \"You\", eg\n   * \"You, Donna, James, and Tyler reacted with 👍\". A different key (`_leading` suffix)\n   * is used when you are not the first to react, eg \"Donna, you, James and Tyler reacted with 👍\".\n   * Use `{{name}}` if you want to instead use the current users' actual name.\n   */ \"reactions.user-list.you_leading\": \"You\",\n    /**\n   * The text shown for the tooltip that appears when hovering over the reaction count, eg\n   * \"Donna, James, and Tyler Reacted with 👍\". Three components are available for use:\n   * - `<UserList/>` - the list of names of users who have reacted, using the locales list format\n   * - `<Text>` - should be wrapped around the text describing the action (\"reacted with\")\n   * - `<ReactionName/>` - the name of the reaction emoji, eg \":heavy_plus_sign:\"\n   */ \"reactions.users-reacted-with-reaction\": \"<UserList/> <Text>reacted with</Text> <ReactionName/>\",\n    /** Status filter: The short title describing filtering on open (non-resolved) comments */ \"status-filter.status-open\": \"Open\",\n    /** Status filter: The full text for describing filtering on open (non-resolved) comments */ \"status-filter.status-open-full\": \"Open comments\",\n    /** Status filter: The short title describing filtering on resolved comments */ \"status-filter.status-resolved\": \"Resolved\",\n    /** Status filter: The full text for describing filtering on resolved comments */ \"status-filter.status-resolved-full\": \"Resolved comments\",\n    /** Status filter: The full text for describing filtering on resolved comments and is upsell mode */ \"status-filter.status-resolved-full-upsell\": \"Upgrade to see resolved comments\"\n});\n //# sourceMappingURL=resources.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/../node_modules/sanity/lib/_chunks-es/resources.mjs\n"));

/***/ })

}]);