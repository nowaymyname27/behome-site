"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_sanity_lib__chunks-es_index3_mjs"],{

/***/ "(app-pages-browser)/../node_modules/rxjs/dist/esm5/internal/operators/pairwise.js":
/*!*********************************************************************!*\
  !*** ../node_modules/rxjs/dist/esm5/internal/operators/pairwise.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pairwise: () => (/* binding */ pairwise)\n/* harmony export */ });\n/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/lift */ \"(app-pages-browser)/../node_modules/rxjs/dist/esm5/internal/util/lift.js\");\n/* harmony import */ var _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./OperatorSubscriber */ \"(app-pages-browser)/../node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js\");\n\n\nfunction pairwise() {\n    return (0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.operate)(function(source, subscriber) {\n        var prev;\n        var hasPrev = false;\n        source.subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__.createOperatorSubscriber)(subscriber, function(value) {\n            var p = prev;\n            prev = value;\n            hasPrev && subscriber.next([\n                p,\n                value\n            ]);\n            hasPrev = true;\n        }));\n    });\n} //# sourceMappingURL=pairwise.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uLi9ub2RlX21vZHVsZXMvcnhqcy9kaXN0L2VzbTUvaW50ZXJuYWwvb3BlcmF0b3JzL3BhaXJ3aXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUN1QztBQUN5QjtBQTZDMUQsU0FBVSxRQUFRO0lBQ3RCLE9BQU8sbURBQU8sQ0FBQyxTQUFDLE1BQU0sRUFBRSxVQUFVO1FBQ2hDLElBQUksSUFBTyxDQUFDO1FBQ1osSUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBQ3BCLE1BQU0sQ0FBQyxTQUFTLENBQ2QsNkVBQXdCLENBQUMsVUFBVSxFQUFFLFNBQUMsS0FBSztZQUN6QyxJQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7WUFDZixJQUFJLEdBQUcsS0FBSyxDQUFDO1lBQ2IsT0FBTyxJQUFJLFVBQVUsQ0FBQyxJQUFJLENBQUM7Z0JBQUMsQ0FBQztnQkFBRSxLQUFLO2FBQUMsQ0FBQyxDQUFDO1lBQ3ZDLE9BQU8sR0FBRyxJQUFJLENBQUM7UUFDakIsQ0FBQyxDQUFDLENBQ0gsQ0FBQztJQUNKLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyIsInNvdXJjZXMiOlsiL1VzZXJzL3NyYy9pbnRlcm5hbC9vcGVyYXRvcnMvcGFpcndpc2UudHMiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/../node_modules/rxjs/dist/esm5/internal/operators/pairwise.js\n"));

/***/ }),

/***/ "(app-pages-browser)/../node_modules/sanity/lib/_chunks-es/index3.mjs":
/*!********************************************************!*\
  !*** ../node_modules/sanity/lib/_chunks-es/index3.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ StructureToolBoundary)\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @swc/helpers/_/_tagged_template_literal */ \"(app-pages-browser)/../node_modules/@swc/helpers/esm/_tagged_template_literal.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/../node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* harmony import */ var react_compiler_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-compiler-runtime */ \"(app-pages-browser)/../node_modules/react-compiler-runtime/dist/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var sanity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! sanity */ \"(app-pages-browser)/../node_modules/sanity/lib/index.mjs\");\n/* harmony import */ var _generate_help_url_esm_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./generate-help-url.esm.mjs */ \"(app-pages-browser)/../node_modules/sanity/lib/_chunks-es/generate-help-url.esm.mjs\");\n/* harmony import */ var _pane_mjs__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./pane.mjs */ \"(app-pages-browser)/../node_modules/sanity/lib/_chunks-es/pane.mjs\");\n/* harmony import */ var _StructureToolProvider_mjs__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./StructureToolProvider.mjs */ \"(app-pages-browser)/../node_modules/sanity/lib/_chunks-es/StructureToolProvider.mjs\");\n/* harmony import */ var sanity_router__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! sanity/router */ \"(app-pages-browser)/../node_modules/sanity/lib/router.mjs\");\n/* harmony import */ var lodash_omit_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/omit.js */ \"(app-pages-browser)/../node_modules/lodash/omit.js\");\n/* harmony import */ var _barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! __barrel_optimize__?names=NEVER,ReplaySubject,concat,firstValueFrom,from,isObservable,of!=!rxjs */ \"(app-pages-browser)/../node_modules/rxjs/dist/esm5/internal/util/isObservable.js\");\n/* harmony import */ var _barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! __barrel_optimize__?names=NEVER,ReplaySubject,concat,firstValueFrom,from,isObservable,of!=!rxjs */ \"(app-pages-browser)/../node_modules/rxjs/dist/esm5/internal/observable/from.js\");\n/* harmony import */ var _barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! __barrel_optimize__?names=NEVER,ReplaySubject,concat,firstValueFrom,from,isObservable,of!=!rxjs */ \"(app-pages-browser)/../node_modules/rxjs/dist/esm5/internal/observable/of.js\");\n/* harmony import */ var _barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! __barrel_optimize__?names=NEVER,ReplaySubject,concat,firstValueFrom,from,isObservable,of!=!rxjs */ \"(app-pages-browser)/../node_modules/rxjs/dist/esm5/internal/firstValueFrom.js\");\n/* harmony import */ var _barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! __barrel_optimize__?names=NEVER,ReplaySubject,concat,firstValueFrom,from,isObservable,of!=!rxjs */ \"(app-pages-browser)/../node_modules/rxjs/dist/esm5/internal/observable/concat.js\");\n/* harmony import */ var _barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! __barrel_optimize__?names=NEVER,ReplaySubject,concat,firstValueFrom,from,isObservable,of!=!rxjs */ \"(app-pages-browser)/../node_modules/rxjs/dist/esm5/internal/observable/never.js\");\n/* harmony import */ var _barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! __barrel_optimize__?names=NEVER,ReplaySubject,concat,firstValueFrom,from,isObservable,of!=!rxjs */ \"(app-pages-browser)/../node_modules/rxjs/dist/esm5/internal/ReplaySubject.js\");\n/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! nanoid */ \"(app-pages-browser)/../node_modules/nanoid/index.browser.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs/operators */ \"(app-pages-browser)/../node_modules/rxjs/dist/esm5/internal/operators/publishReplay.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs/operators */ \"(app-pages-browser)/../node_modules/rxjs/dist/esm5/internal/operators/refCount.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs/operators */ \"(app-pages-browser)/../node_modules/rxjs/dist/esm5/internal/operators/switchMap.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs/operators */ \"(app-pages-browser)/../node_modules/rxjs/dist/esm5/internal/operators/map.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! rxjs/operators */ \"(app-pages-browser)/../node_modules/rxjs/dist/esm5/internal/operators/startWith.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! rxjs/operators */ \"(app-pages-browser)/../node_modules/rxjs/dist/esm5/internal/operators/pairwise.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! rxjs/operators */ \"(app-pages-browser)/../node_modules/rxjs/dist/esm5/internal/operators/scan.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! rxjs/operators */ \"(app-pages-browser)/../node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js\");\n/* harmony import */ var _sanity_uuid__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @sanity/uuid */ \"(app-pages-browser)/../node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var _sanity_icons__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @sanity/icons */ \"(app-pages-browser)/../node_modules/@sanity/icons/dist/index.js\");\n/* harmony import */ var _sanity_ui__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @sanity/ui */ \"(app-pages-browser)/../node_modules/@sanity/ui/dist/_chunks-es/_visual-editing.mjs\");\n/* harmony import */ var _sanity_ui__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @sanity/ui */ \"(app-pages-browser)/../node_modules/@sanity/ui/dist/index.mjs\");\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! styled-components */ \"(app-pages-browser)/../node_modules/styled-components/dist/styled-components.browser.esm.js\");\n/* harmony import */ var is_hotkey_esm__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! is-hotkey-esm */ \"(app-pages-browser)/../node_modules/is-hotkey-esm/dist/index.js\");\n/* harmony import */ var lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash/isEqual.js */ \"(app-pages-browser)/../node_modules/lodash/isEqual.js\");\n\nfunction _templateObject() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n  &:not(:last-child)::after {\\n    content: ' ➝ ';\\n    opacity: 0.5;\\n  }\\n\"\n    ]);\n    _templateObject = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n  min-height: 100%;\\n  min-width: 320px;\\n\"\n    ]);\n    _templateObject1 = function() {\n        return data;\n    };\n    return data;\n}\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$(), _s7 = $RefreshSig$(), _s8 = $RefreshSig$(), _s9 = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass PaneResolutionError extends Error {\n    constructor({ message, context, helpId, cause }){\n        super(message), this.name = \"PaneResolutionError\", this.context = context, this.helpId = helpId, this.cause = cause;\n    }\n}\nconst randomIdCache = /* @__PURE__ */ new WeakMap();\nfunction assignId(obj) {\n    const cachedValue = randomIdCache.get(obj);\n    if (cachedValue) return cachedValue;\n    const id = (0,nanoid__WEBPACK_IMPORTED_MODULE_6__.nanoid)();\n    return randomIdCache.set(obj, id), id;\n}\nconst isPromise = (thing)=>!!thing && typeof (thing === null || thing === void 0 ? void 0 : thing.then) == \"function\", isSerializable = (thing)=>(0,sanity__WEBPACK_IMPORTED_MODULE_7__.isRecord)(thing) ? typeof thing.serialize == \"function\" : !1, rethrowWithPaneResolutionErrors = (next)=>(unresolvedPane, context, flatIndex)=>{\n        try {\n            return next(unresolvedPane, context, flatIndex);\n        } catch (e) {\n            throw e instanceof PaneResolutionError ? e : new PaneResolutionError({\n                message: typeof (e === null || e === void 0 ? void 0 : e.message) == \"string\" ? e.message : \"\",\n                context,\n                cause: e\n            });\n        }\n    }, wrapWithPublishReplay = (next)=>function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        return next(...args).pipe(// need to add publishReplay + refCount to ensure new subscribers always\n        // get an emission. without this, memoized observables may get stuck\n        // waiting for their first emissions resulting in a loading pane\n        (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.publishReplay)(1), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.refCount)());\n    };\nfunction createPaneResolver(middleware) {\n    const resolvePane = rethrowWithPaneResolutionErrors(wrapWithPublishReplay(middleware((unresolvedPane, context, flatIndex)=>{\n        if (!unresolvedPane) throw new PaneResolutionError({\n            message: \"Pane returned no child\",\n            context,\n            helpId: \"structure-item-returned-no-child\"\n        });\n        return isPromise(unresolvedPane) || (0,_barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_10__.isObservable)(unresolvedPane) ? (0,_barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_11__.from)(unresolvedPane).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.switchMap)((result)=>resolvePane(result, context, flatIndex))) : isSerializable(unresolvedPane) ? resolvePane(unresolvedPane.serialize(context), context, flatIndex) : typeof unresolvedPane == \"function\" ? resolvePane(unresolvedPane(context.id, context), context, flatIndex) : (0,_barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_13__.of)(unresolvedPane);\n    })));\n    return resolvePane;\n}\nconst bindCache = /* @__PURE__ */ new WeakMap();\nfunction memoBind(obj, methodKey) {\n    const boundMethods = bindCache.get(obj) || /* @__PURE__ */ new Map();\n    if (boundMethods) {\n        const bound2 = boundMethods.get(methodKey);\n        if (bound2) return bound2;\n    }\n    const method = obj[methodKey];\n    if (typeof method != \"function\") throw new Error(\"Expected property `\".concat(methodKey, \"` to be a function but got \").concat(typeof method, \" instead.\"));\n    const bound = method.bind(obj);\n    return boundMethods.set(methodKey, bound), bindCache.set(obj, boundMethods), bound;\n}\nasync function resolveIntent(options) {\n    const resolvedPaneCache = /* @__PURE__ */ new Map(), resolvePane = createPaneResolver((nextFn)=>(unresolvedPane, context, flatIndex)=>{\n            const key = unresolvedPane && \"\".concat(assignId(unresolvedPane), \"-\").concat(context.path.join(\"__\")), cachedResolvedPane = key && resolvedPaneCache.get(key);\n            if (cachedResolvedPane) return cachedResolvedPane;\n            const result = nextFn(unresolvedPane, context, flatIndex);\n            return key && resolvedPaneCache.set(key, result), result;\n        }), fallbackEditorPanes = [\n        [\n            {\n                id: \"__edit__\".concat(options.params.id),\n                params: {\n                    ...lodash_omit_js__WEBPACK_IMPORTED_MODULE_4__(options.params, [\n                        \"id\"\n                    ]),\n                    type: options.params.type\n                },\n                payload: options.payload\n            }\n        ]\n    ];\n    async function traverse(param) {\n        let { currentId, flatIndex, intent, params, parent: parent2, path, payload, unresolvedPane, levelIndex, structureContext } = param;\n        var // if the resolve pane's `canHandleIntent` returns true, then resolve\n        _resolvedPane_canHandleIntent;\n        if (!unresolvedPane) return [];\n        const { id: targetId, type: schemaTypeName, ...otherParams } = params, resolvedPane = await (0,_barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_14__.firstValueFrom)(resolvePane(unresolvedPane, {\n            id: currentId,\n            splitIndex: 0,\n            parent: parent2,\n            path,\n            index: flatIndex,\n            params: {},\n            payload: void 0,\n            structureContext\n        }, flatIndex));\n        return resolvedPane.type === \"document\" && resolvedPane.id === targetId ? [\n            {\n                panes: [\n                    ...path.slice(0, path.length - 1).map((i)=>[\n                            {\n                                id: i\n                            }\n                        ]),\n                    [\n                        {\n                            id: targetId,\n                            params: otherParams,\n                            payload\n                        }\n                    ]\n                ],\n                depthIndex: path.length,\n                levelIndex\n            }\n        ] : ((_resolvedPane_canHandleIntent = resolvedPane.canHandleIntent) === null || _resolvedPane_canHandleIntent === void 0 ? void 0 : _resolvedPane_canHandleIntent.call(resolvedPane, intent, params, {\n            pane: resolvedPane,\n            index: flatIndex\n        })) || // if the pane's `canHandleIntent` did not return true, then match against\n        // this default case. we will resolve the intent if:\n        resolvedPane.type === \"documentList\" && // 1. the schema type matches (this required for the document to render)\n        resolvedPane.schemaTypeName === schemaTypeName && // 2. the filter is the default filter.\n        //\n        // NOTE: this case is to prevent false positive matches where the user\n        // has configured a more specific filter for a particular type. In that\n        // case, the user can implement their own `canHandleIntent` function\n        resolvedPane.options.filter === \"_type == $type\" ? [\n            {\n                panes: [\n                    // map the current path to router panes\n                    ...path.map((id)=>[\n                            {\n                                id\n                            }\n                        ]),\n                    // then augment with the intents IDs and params\n                    [\n                        {\n                            id: params.id,\n                            params: otherParams,\n                            payload\n                        }\n                    ]\n                ],\n                depthIndex: path.length,\n                levelIndex\n            }\n        ] : resolvedPane.type === \"list\" && resolvedPane.child && resolvedPane.items ? (await Promise.all(resolvedPane.items.map((item, nextLevelIndex)=>item.type === \"divider\" ? Promise.resolve([]) : traverse({\n                currentId: item._id || item.id,\n                flatIndex: flatIndex + 1,\n                intent,\n                params,\n                parent: resolvedPane,\n                path: [\n                    ...path,\n                    item.id\n                ],\n                payload,\n                unresolvedPane: typeof resolvedPane.child == \"function\" ? memoBind(resolvedPane, \"child\") : resolvedPane.child,\n                levelIndex: nextLevelIndex,\n                structureContext\n            })))).flat() : [];\n    }\n    const closestPaneToRoot = (await traverse({\n        currentId: \"root\",\n        flatIndex: 0,\n        levelIndex: 0,\n        intent: options.intent,\n        params: options.params,\n        parent: null,\n        path: [],\n        payload: options.payload,\n        unresolvedPane: options.rootPaneNode,\n        structureContext: options.structureContext\n    })).sort((a, b)=>a.depthIndex === b.depthIndex ? a.levelIndex - b.levelIndex : a.depthIndex - b.depthIndex)[0];\n    return closestPaneToRoot ? closestPaneToRoot.panes : fallbackEditorPanes;\n}\nconst fallbackEditorChild = (nodeId, context)=>{\n    const id = nodeId.replace(/^__edit__/, \"\"), { params, payload, structureContext: { resolveDocumentNode } } = context, { type, template } = params;\n    if (!type) throw new Error(\"Document type for document with ID \".concat(id, \" was not provided in the router params.\"));\n    let defaultDocumentBuilder = resolveDocumentNode({\n        schemaType: type,\n        documentId: id\n    }).id(\"editor\");\n    return template && (defaultDocumentBuilder = defaultDocumentBuilder.initialValueTemplate(template, payload)), defaultDocumentBuilder.serialize();\n};\nfunction hashContext(context) {\n    var _context_serializeOptions, _context_serializeOptions1;\n    return \"contextHash(\".concat(JSON.stringify({\n        id: context.id,\n        parentId: parent && assignId(parent),\n        path: context.path,\n        index: context.index,\n        splitIndex: context.splitIndex,\n        serializeOptionsIndex: (_context_serializeOptions = context.serializeOptions) === null || _context_serializeOptions === void 0 ? void 0 : _context_serializeOptions.index,\n        serializeOptionsPath: (_context_serializeOptions1 = context.serializeOptions) === null || _context_serializeOptions1 === void 0 ? void 0 : _context_serializeOptions1.path\n    }), \")\");\n}\nconst hashResolvedPaneMeta = (meta)=>{\n    const normalized = {\n        type: meta.type,\n        id: meta.routerPaneSibling.id,\n        params: meta.routerPaneSibling.params || {},\n        payload: meta.routerPaneSibling.payload || null,\n        flatIndex: meta.flatIndex,\n        groupIndex: meta.groupIndex,\n        siblingIndex: meta.siblingIndex,\n        path: meta.path,\n        paneNode: meta.type === \"resolvedMeta\" ? assignId(meta.paneNode) : null\n    };\n    return \"metaHash(\".concat(JSON.stringify(normalized), \")\");\n};\nfunction resolvePaneTree(param) {\n    let { unresolvedPane, flattenedRouterPanes, parent: parent2, path, resolvePane, structureContext } = param;\n    const [current, ...rest] = flattenedRouterPanes, next = rest[0], context = {\n        id: current.routerPaneSibling.id,\n        splitIndex: current.siblingIndex,\n        parent: parent2,\n        path: [\n            ...path,\n            current.routerPaneSibling.id\n        ],\n        index: current.flatIndex,\n        params: current.routerPaneSibling.params || {},\n        payload: current.routerPaneSibling.payload,\n        structureContext\n    };\n    try {\n        return resolvePane(unresolvedPane, context, current.flatIndex).pipe(// this switch map receives a resolved pane\n        (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.switchMap)((paneNode)=>{\n            const resolvedPaneMeta = {\n                type: \"resolvedMeta\",\n                ...current,\n                paneNode,\n                path: context.path\n            }, loadingPanes = rest.map((i, restIndex)=>({\n                    type: \"loading\",\n                    path: [\n                        ...context.path,\n                        ...rest.slice(restIndex).map((_, currentIndex)=>\"[\".concat(i.flatIndex + currentIndex, \"]\"))\n                    ],\n                    paneNode: null,\n                    ...i\n                }));\n            if (!rest.length) return (0,_barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_13__.of)([\n                resolvedPaneMeta\n            ]);\n            let nextStream;\n            return /* the fallback editor case */ (next === null || next === void 0 ? void 0 : next.routerPaneSibling.id.startsWith(\"__edit__\")) ? nextStream = resolvePaneTree({\n                unresolvedPane: fallbackEditorChild,\n                flattenedRouterPanes: rest,\n                parent: parent2,\n                path: context.path,\n                resolvePane,\n                structureContext\n            }) : current.groupIndex === (next === null || next === void 0 ? void 0 : next.groupIndex) ? nextStream = resolvePaneTree({\n                unresolvedPane,\n                flattenedRouterPanes: rest,\n                parent: parent2,\n                path,\n                resolvePane,\n                structureContext\n            }) : nextStream = resolvePaneTree({\n                unresolvedPane: typeof paneNode.child == \"function\" ? memoBind(paneNode, \"child\") : paneNode.child,\n                flattenedRouterPanes: rest,\n                parent: paneNode,\n                path: context.path,\n                resolvePane,\n                structureContext\n            }), (0,_barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_15__.concat)(// we emit the loading panes first in a concat (this emits immediately)\n            (0,_barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_13__.of)([\n                resolvedPaneMeta,\n                ...loadingPanes\n            ]), // then whenever the next stream is done, the results will be combined.\n            nextStream.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_16__.map)((nextResolvedPanes)=>[\n                    resolvedPaneMeta,\n                    ...nextResolvedPanes\n                ])));\n        }));\n    } catch (e) {\n        if (e instanceof PaneResolutionError && (e.context && console.warn(\"Pane resolution error at index \".concat(e.context.index).concat(e.context.splitIndex > 0 ? \" for split pane index \".concat(e.context.splitIndex) : \"\", \": \").concat(e.message).concat(e.helpId ? \" - see \".concat((0,_generate_help_url_esm_mjs__WEBPACK_IMPORTED_MODULE_17__.generateHelpUrl)(e.helpId)) : \"\"), e), e.helpId === \"structure-item-returned-no-child\")) return (0,_barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_13__.of)([]);\n        throw e;\n    }\n}\nfunction createResolvedPaneNodeStream(param) {\n    let { routerPanesStream, rootPaneNode, initialCacheState = {\n        cacheKeysByFlatIndex: [],\n        flattenedRouterPanes: [],\n        resolvedPaneCache: /* @__PURE__ */ new Map(),\n        resolvePane: ()=>_barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_18__.NEVER\n    }, structureContext } = param;\n    return routerPanesStream.pipe(// add in implicit \"root\" router pane\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_16__.map)((rawRouterPanes)=>[\n            [\n                {\n                    id: \"root\"\n                }\n            ],\n            ...rawRouterPanes\n        ]), // create flattened router panes\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_16__.map)((routerPanes)=>routerPanes.flatMap((routerPaneGroup, groupIndex)=>routerPaneGroup.map((routerPaneSibling, siblingIndex)=>({\n                    routerPaneSibling,\n                    groupIndex,\n                    siblingIndex\n                }))).map((i, index)=>({\n                ...i,\n                flatIndex: index\n            }))), // calculate a \"diffIndex\" used for clearing the memo cache\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_19__.startWith)([]), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_20__.pairwise)(), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_16__.map)((param)=>{\n        let [prev, curr] = param;\n        for(let i = 0; i < curr.length; i++){\n            const prevValue = prev[i], currValue = curr[i];\n            if (!lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_5__(prevValue, currValue)) return {\n                flattenedRouterPanes: curr,\n                diffIndex: i\n            };\n        }\n        return {\n            flattenedRouterPanes: curr,\n            diffIndex: curr.length\n        };\n    }), // create the memoized `resolvePane` function and manage the memo cache\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_21__.scan)((acc, next)=>{\n        const { cacheKeysByFlatIndex, resolvedPaneCache } = acc, { flattenedRouterPanes, diffIndex } = next, beforeDiffIndex = cacheKeysByFlatIndex.slice(0, diffIndex + 1), afterDiffIndex = cacheKeysByFlatIndex.slice(diffIndex + 1), keysToKeep = new Set(beforeDiffIndex.flatMap((keySet)=>Array.from(keySet))), keysToDelete = afterDiffIndex.flatMap((keySet)=>Array.from(keySet)).filter((key)=>!keysToKeep.has(key));\n        for (const key of keysToDelete)resolvedPaneCache.delete(key);\n        return {\n            flattenedRouterPanes,\n            cacheKeysByFlatIndex,\n            resolvedPaneCache,\n            resolvePane: createPaneResolver((nextFn)=>(unresolvedPane, context, flatIndex)=>{\n                    const key = unresolvedPane && \"\".concat(assignId(unresolvedPane), \"-\").concat(hashContext(context)), cachedResolvedPane = key && resolvedPaneCache.get(key);\n                    if (cachedResolvedPane) return cachedResolvedPane;\n                    const result = nextFn(unresolvedPane, context, flatIndex);\n                    if (!key) return result;\n                    const cacheKeySet = cacheKeysByFlatIndex[flatIndex] || /* @__PURE__ */ new Set();\n                    return cacheKeySet.add(key), cacheKeysByFlatIndex[flatIndex] = cacheKeySet, resolvedPaneCache.set(key, result), result;\n                })\n        };\n    }, initialCacheState), // run the memoized, recursive resolving\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.switchMap)((param)=>{\n        let { flattenedRouterPanes, resolvePane } = param;\n        return resolvePaneTree({\n            unresolvedPane: rootPaneNode,\n            flattenedRouterPanes,\n            parent: null,\n            path: [],\n            resolvePane,\n            structureContext\n        });\n    })).pipe(// this diffs the previous emission with the current one. if there is a new\n    // loading pane at the same position where a previous pane already had a\n    // resolved value (looking at the IDs to compare), then return the previous\n    // pane instead of the loading pane\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_21__.scan)((prev, next)=>next.map((nextPane, index)=>{\n            const prevPane = prev[index];\n            return !prevPane || nextPane.type !== \"loading\" ? nextPane : prevPane.routerPaneSibling.id === nextPane.routerPaneSibling.id ? prevPane : nextPane;\n        }), []), // this prevents duplicate emissions\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_22__.distinctUntilChanged)((prev, next)=>{\n        if (prev.length !== next.length) return !1;\n        for(let i = 0; i < next.length; i++){\n            const prevValue = prev[i], nextValue = next[i];\n            if (hashResolvedPaneMeta(prevValue) !== hashResolvedPaneMeta(nextValue)) return !1;\n        }\n        return !0;\n    }));\n}\nfunction useRouterPanesStream() {\n    _s();\n    const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_2__.c)(6), [routerStateSubject] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(_temp$5);\n    let t0;\n    $[0] !== routerStateSubject ? (t0 = routerStateSubject.asObservable().pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_16__.map)(_temp2$3)), $[0] = routerStateSubject, $[1] = t0) : t0 = $[1];\n    const routerPanes$ = t0, { state: routerState } = (0,sanity_router__WEBPACK_IMPORTED_MODULE_23__.useRouter)();\n    let t1, t2;\n    return $[2] !== routerState || $[3] !== routerStateSubject ? (t1 = ()=>{\n        routerStateSubject.next(routerState);\n    }, t2 = [\n        routerState,\n        routerStateSubject\n    ], $[2] = routerState, $[3] = routerStateSubject, $[4] = t1, $[5] = t2) : (t1 = $[4], t2 = $[5]), (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(t1, t2), routerPanes$;\n}\n_s(useRouterPanesStream, \"Frva2CghnvVJURZE6s5Ju5xckYY=\", false, function() {\n    return [\n        sanity_router__WEBPACK_IMPORTED_MODULE_23__.useRouter,\n        sanity_router__WEBPACK_IMPORTED_MODULE_23__.useRouter\n    ];\n});\nfunction _temp2$3(_routerState) {\n    return (_routerState === null || _routerState === void 0 ? void 0 : _routerState.panes) || [];\n}\nfunction _temp$5() {\n    return new _barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_24__.ReplaySubject(1);\n}\nfunction useResolvedPanes() {\n    _s1();\n    const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_2__.c)(6), [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)();\n    if (error) throw error;\n    const { structureContext, rootPaneNode } = (0,_pane_mjs__WEBPACK_IMPORTED_MODULE_25__.useStructureTool)();\n    let t0;\n    $[0] === Symbol.for(\"react.memo_cache_sentinel\") ? (t0 = {\n        paneDataItems: [],\n        resolvedPanes: [],\n        routerPanes: []\n    }, $[0] = t0) : t0 = $[0];\n    const [data, setData] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(t0), routerPanesStream = useRouterPanesStream();\n    let t1, t2;\n    return $[1] !== rootPaneNode || $[2] !== routerPanesStream || $[3] !== structureContext ? (t1 = ()=>{\n        const subscription = createResolvedPaneNodeStream({\n            rootPaneNode,\n            routerPanesStream,\n            structureContext\n        }).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_16__.map)(_temp5)).subscribe({\n            next: (result)=>setData(result),\n            error: (e)=>setError(e)\n        });\n        return ()=>subscription.unsubscribe();\n    }, t2 = [\n        rootPaneNode,\n        routerPanesStream,\n        structureContext\n    ], $[1] = rootPaneNode, $[2] = routerPanesStream, $[3] = structureContext, $[4] = t1, $[5] = t2) : (t1 = $[4], t2 = $[5]), (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(t1, t2), data;\n}\n_s1(useResolvedPanes, \"X0ZFskn1hJ23Ble+F09dCx8ff7E=\", false, function() {\n    return [\n        _pane_mjs__WEBPACK_IMPORTED_MODULE_25__.useStructureTool,\n        useRouterPanesStream\n    ];\n});\nfunction _temp5(resolvedPanes) {\n    const routerPanes = resolvedPanes.reduce(_temp3, []), groupsLen = routerPanes.length, paneDataItems = resolvedPanes.map((pane)=>{\n        const { groupIndex, flatIndex, siblingIndex, routerPaneSibling, path } = pane, itemId = routerPaneSibling.id, nextGroup = routerPanes[groupIndex + 1];\n        var _nextGroup__id;\n        return {\n            active: groupIndex === groupsLen - 2,\n            childItemId: (_nextGroup__id = nextGroup === null || nextGroup === void 0 ? void 0 : nextGroup[0].id) !== null && _nextGroup__id !== void 0 ? _nextGroup__id : null,\n            index: flatIndex,\n            itemId: routerPaneSibling.id,\n            groupIndex,\n            key: \"\".concat(pane.type === \"loading\" ? \"unknown\" : pane.paneNode.id, \"-\").concat(itemId, \"-\").concat(siblingIndex),\n            pane: pane.type === \"loading\" ? _pane_mjs__WEBPACK_IMPORTED_MODULE_25__.LOADING_PANE : pane.paneNode,\n            params: routerPaneSibling.params || {},\n            path: path.join(\";\"),\n            payload: routerPaneSibling.payload,\n            selected: flatIndex === resolvedPanes.length - 1,\n            siblingIndex\n        };\n    });\n    return {\n        paneDataItems,\n        routerPanes,\n        resolvedPanes: paneDataItems.map(_temp4)\n    };\n}\nfunction _temp4(pane_0) {\n    return pane_0.pane;\n}\nfunction _temp3(acc, next) {\n    const currentGroup = acc[next.groupIndex] || [];\n    return currentGroup[next.siblingIndex] = next.routerPaneSibling, acc[next.groupIndex] = currentGroup, acc;\n}\nasync function ensureDocumentIdAndType(documentStore, id, type) {\n    if (id && type) return {\n        id,\n        type\n    };\n    if (!id && type) return {\n        id: (0,_sanity_uuid__WEBPACK_IMPORTED_MODULE_26__[\"default\"])(),\n        type\n    };\n    if (id && !type) {\n        const resolvedType = await (0,_barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_14__.firstValueFrom)(documentStore.resolveTypeForDocument(id));\n        return {\n            id,\n            type: resolvedType\n        };\n    }\n    throw new PaneResolutionError({\n        message: \"Neither document `id` or `type` was provided when trying to resolve intent.\"\n    });\n}\nconst EMPTY_RECORD = {}, IntentResolver = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_3__.memo)(_s2(function() {\n    _s2();\n    const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_2__.c)(7), { navigate } = (0,sanity_router__WEBPACK_IMPORTED_MODULE_23__.useRouter)(), maybeIntent = (0,sanity_router__WEBPACK_IMPORTED_MODULE_23__.useRouterState)(_temp$4), { rootPaneNode, structureContext } = (0,_pane_mjs__WEBPACK_IMPORTED_MODULE_25__.useStructureTool)(), documentStore = (0,sanity__WEBPACK_IMPORTED_MODULE_7__.useDocumentStore)(), [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(null);\n    if (error) throw error;\n    let t0, t1;\n    return $[0] !== documentStore || $[1] !== maybeIntent || $[2] !== navigate || $[3] !== rootPaneNode || $[4] !== structureContext ? (t0 = ()=>{\n        if (maybeIntent) {\n            const { intent, params, payload } = maybeIntent;\n            let cancelled = !1;\n            return (async function() {\n                const { id, type } = await ensureDocumentIdAndType(documentStore, typeof params.id == \"string\" ? params.id : void 0, typeof params.type == \"string\" ? params.type : void 0);\n                if (cancelled) return;\n                const panes = await resolveIntent({\n                    intent,\n                    params: {\n                        ...params,\n                        id,\n                        type\n                    },\n                    payload,\n                    rootPaneNode,\n                    structureContext\n                });\n                cancelled || navigate({\n                    panes\n                }, {\n                    replace: !0\n                });\n            })().catch(setError), ()=>{\n                cancelled = !0;\n            };\n        }\n    }, t1 = [\n        documentStore,\n        maybeIntent,\n        navigate,\n        rootPaneNode,\n        structureContext\n    ], $[0] = documentStore, $[1] = maybeIntent, $[2] = navigate, $[3] = rootPaneNode, $[4] = structureContext, $[5] = t0, $[6] = t1) : (t0 = $[5], t1 = $[6]), (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(t0, t1), null;\n}, \"lFNX4CNO4Ye4hPOBzjl/dm17GCk=\", false, function() {\n    return [\n        sanity_router__WEBPACK_IMPORTED_MODULE_23__.useRouter,\n        sanity_router__WEBPACK_IMPORTED_MODULE_23__.useRouterState,\n        _pane_mjs__WEBPACK_IMPORTED_MODULE_25__.useStructureTool,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useDocumentStore,\n        sanity_router__WEBPACK_IMPORTED_MODULE_23__.useRouter,\n        sanity_router__WEBPACK_IMPORTED_MODULE_23__.useRouterState,\n        _pane_mjs__WEBPACK_IMPORTED_MODULE_25__.useStructureTool,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useDocumentStore\n    ];\n}));\nfunction _temp$4(routerState) {\n    const intentName = typeof routerState.intent == \"string\" ? routerState.intent : void 0;\n    return intentName ? {\n        intent: intentName,\n        params: (0,sanity__WEBPACK_IMPORTED_MODULE_7__.isRecord)(routerState.params) ? routerState.params : EMPTY_RECORD,\n        payload: routerState.payload\n    } : void 0;\n}\nconst PathSegment = styled_components__WEBPACK_IMPORTED_MODULE_27__.styled.span(_templateObject());\n_c = PathSegment;\nfunction formatStack(stack) {\n    return stack.replace(/\\(\\.\\.\\.\\)\\./g, \"(...)\\n  .\").replace(/__WEBPACK_IMPORTED_MODULE_\\d+_+/g, \"\").replace(/___default\\./g, \".\").replace(new RegExp(\" \\\\(https?:\\\\/\\\\/\".concat(window.location.host), \"g\"), \" (\");\n}\nfunction StructureError(t0) {\n    _s3();\n    const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_2__.c)(74), { error } = t0;\n    if (!(error instanceof PaneResolutionError)) throw error;\n    const { cause } = error, { t } = (0,sanity__WEBPACK_IMPORTED_MODULE_7__.useTranslation)(_StructureToolProvider_mjs__WEBPACK_IMPORTED_MODULE_28__.structureLocaleNamespace), stack = (cause === null || cause === void 0 ? void 0 : cause.stack) || error.stack;\n    let t1;\n    $[0] !== cause || $[1] !== error.message || $[2] !== stack ? (t1 = stack && !(cause instanceof _StructureToolProvider_mjs__WEBPACK_IMPORTED_MODULE_28__.SerializeError) && !error.message.includes(\"Module build failed:\"), $[0] = cause, $[1] = error.message, $[2] = stack, $[3] = t1) : t1 = $[3];\n    const showStack = t1;\n    let T0, T1, T2, handleReload, helpId, t10, t11, t12, t13, t14, t2, t3, t4, t5, t6, t7, t8, t9;\n    if ($[4] !== cause || $[5] !== error.helpId || $[6] !== t) {\n        const path = cause instanceof _StructureToolProvider_mjs__WEBPACK_IMPORTED_MODULE_28__.SerializeError ? cause.path : [];\n        helpId = cause instanceof _StructureToolProvider_mjs__WEBPACK_IMPORTED_MODULE_28__.SerializeError && cause.helpId || error.helpId, handleReload = _temp$3, T2 = _sanity_ui__WEBPACK_IMPORTED_MODULE_29__.Card, t10 = \"fill\", t11 = \"auto\", t12 = 4, t13 = \"border\", t14 = \"critical\", T1 = _sanity_ui__WEBPACK_IMPORTED_MODULE_29__.Container;\n        let t152;\n        $[25] !== t ? (t152 = t(\"structure-error.header.text\"), $[25] = t, $[26] = t152) : t152 = $[26], $[27] !== t152 ? (t9 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_29__.Heading, {\n            as: \"h2\",\n            children: t152\n        }), $[27] = t152, $[28] = t9) : t9 = $[28], T0 = _sanity_ui__WEBPACK_IMPORTED_MODULE_29__.Card, t2 = 4, t3 = 4, t4 = 2, t5 = \"auto\", t6 = 1, t7 = \"inherit\", t8 = path.length > 0 && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_29__.Stack, {\n            space: 2,\n            children: [\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_29__.Text, {\n                    size: 1,\n                    weight: \"medium\",\n                    children: t(\"structure-error.structure-path.label\")\n                }),\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_29__.Code, {\n                    children: path.slice(1).map(_temp2$2)\n                })\n            ]\n        }), $[4] = cause, $[5] = error.helpId, $[6] = t, $[7] = T0, $[8] = T1, $[9] = T2, $[10] = handleReload, $[11] = helpId, $[12] = t10, $[13] = t11, $[14] = t12, $[15] = t13, $[16] = t14, $[17] = t2, $[18] = t3, $[19] = t4, $[20] = t5, $[21] = t6, $[22] = t7, $[23] = t8, $[24] = t9;\n    } else T0 = $[7], T1 = $[8], T2 = $[9], handleReload = $[10], helpId = $[11], t10 = $[12], t11 = $[13], t12 = $[14], t13 = $[15], t14 = $[16], t2 = $[17], t3 = $[18], t4 = $[19], t5 = $[20], t6 = $[21], t7 = $[22], t8 = $[23], t9 = $[24];\n    let t15;\n    $[29] !== t ? (t15 = t(\"structure-error.error.label\"), $[29] = t, $[30] = t15) : t15 = $[30];\n    let t16;\n    $[31] !== t15 ? (t16 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_29__.Text, {\n        size: 1,\n        weight: \"medium\",\n        children: t15\n    }), $[31] = t15, $[32] = t16) : t16 = $[32];\n    let t17;\n    $[33] !== error.message || $[34] !== showStack || $[35] !== stack ? (t17 = showStack ? formatStack(stack) : error.message, $[33] = error.message, $[34] = showStack, $[35] = stack, $[36] = t17) : t17 = $[36];\n    let t18;\n    $[37] !== t17 ? (t18 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_29__.Code, {\n        children: t17\n    }), $[37] = t17, $[38] = t18) : t18 = $[38];\n    let t19;\n    $[39] !== t16 || $[40] !== t18 ? (t19 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_29__.Stack, {\n        marginTop: 4,\n        space: 2,\n        children: [\n            t16,\n            t18\n        ]\n    }), $[39] = t16, $[40] = t18, $[41] = t19) : t19 = $[41];\n    let t20;\n    $[42] !== helpId || $[43] !== t ? (t20 = helpId && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_29__.Box, {\n        marginTop: 4,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_29__.Text, {\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"a\", {\n                href: (0,_generate_help_url_esm_mjs__WEBPACK_IMPORTED_MODULE_17__.generateHelpUrl)(helpId),\n                rel: \"noopener noreferrer\",\n                target: \"_blank\",\n                children: t(\"structure-error.docs-link.text\")\n            })\n        })\n    }), $[42] = helpId, $[43] = t, $[44] = t20) : t20 = $[44];\n    let t21;\n    $[45] !== t ? (t21 = t(\"structure-error.reload-button.text\"), $[45] = t, $[46] = t21) : t21 = $[46];\n    let t22;\n    $[47] !== handleReload || $[48] !== t21 ? (t22 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_29__.Box, {\n        marginTop: 4,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_generate_help_url_esm_mjs__WEBPACK_IMPORTED_MODULE_17__.Button, {\n            text: t21,\n            icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_30__.SyncIcon,\n            tone: \"primary\",\n            onClick: handleReload\n        })\n    }), $[47] = handleReload, $[48] = t21, $[49] = t22) : t22 = $[49];\n    let t23;\n    $[50] !== T0 || $[51] !== t19 || $[52] !== t2 || $[53] !== t20 || $[54] !== t22 || $[55] !== t3 || $[56] !== t4 || $[57] !== t5 || $[58] !== t6 || $[59] !== t7 || $[60] !== t8 ? (t23 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(T0, {\n        marginTop: t2,\n        padding: t3,\n        radius: t4,\n        overflow: t5,\n        shadow: t6,\n        tone: t7,\n        children: [\n            t8,\n            t19,\n            t20,\n            t22\n        ]\n    }), $[50] = T0, $[51] = t19, $[52] = t2, $[53] = t20, $[54] = t22, $[55] = t3, $[56] = t4, $[57] = t5, $[58] = t6, $[59] = t7, $[60] = t8, $[61] = t23) : t23 = $[61];\n    let t24;\n    $[62] !== T1 || $[63] !== t23 || $[64] !== t9 ? (t24 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(T1, {\n        children: [\n            t9,\n            t23\n        ]\n    }), $[62] = T1, $[63] = t23, $[64] = t9, $[65] = t24) : t24 = $[65];\n    let t25;\n    return $[66] !== T2 || $[67] !== t10 || $[68] !== t11 || $[69] !== t12 || $[70] !== t13 || $[71] !== t14 || $[72] !== t24 ? (t25 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(T2, {\n        height: t10,\n        overflow: t11,\n        padding: t12,\n        sizing: t13,\n        tone: t14,\n        children: t24\n    }), $[66] = T2, $[67] = t10, $[68] = t11, $[69] = t12, $[70] = t13, $[71] = t14, $[72] = t24, $[73] = t25) : t25 = $[73], t25;\n}\n_s3(StructureError, \"hAiY8kxFQtsoAY3Yj65FbxVwRNI=\", false, function() {\n    return [\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useTranslation,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useTranslation,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useTranslation\n    ];\n});\n_c1 = StructureError;\nfunction _temp2$2(segment, i) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PathSegment, {\n        children: segment\n    }, \"\".concat(segment, \"-\").concat(i));\n}\nfunction _temp$3() {\n    window.location.reload();\n}\nfunction NoDocumentTypesScreen() {\n    _s4();\n    const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_2__.c)(17), { t } = (0,sanity__WEBPACK_IMPORTED_MODULE_7__.useTranslation)(_StructureToolProvider_mjs__WEBPACK_IMPORTED_MODULE_28__.structureLocaleNamespace);\n    let t0;\n    $[0] === Symbol.for(\"react.memo_cache_sentinel\") ? (t0 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_29__.Box, {\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_29__.Text, {\n            size: 1,\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_30__.WarningOutlineIcon, {})\n        })\n    }), $[0] = t0) : t0 = $[0];\n    let t1;\n    $[1] !== t ? (t1 = t(\"no-document-types-screen.title\"), $[1] = t, $[2] = t1) : t1 = $[2];\n    let t2;\n    $[3] !== t1 ? (t2 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_29__.Text, {\n        as: \"h1\",\n        size: 1,\n        weight: \"medium\",\n        children: t1\n    }), $[3] = t1, $[4] = t2) : t2 = $[4];\n    let t3;\n    $[5] !== t ? (t3 = t(\"no-document-types-screen.subtitle\"), $[5] = t, $[6] = t3) : t3 = $[6];\n    let t4;\n    $[7] !== t3 ? (t4 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_29__.Text, {\n        as: \"p\",\n        muted: !0,\n        size: 1,\n        children: t3\n    }), $[7] = t3, $[8] = t4) : t4 = $[8];\n    let t5;\n    $[9] !== t ? (t5 = t(\"no-document-types-screen.link-text\"), $[9] = t, $[10] = t5) : t5 = $[10];\n    let t6;\n    $[11] !== t5 ? (t6 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_29__.Text, {\n        as: \"p\",\n        muted: !0,\n        size: 1,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"a\", {\n            href: \"https://www.sanity.io/docs/create-a-schema-and-configure-sanity-studio\",\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: t5\n        })\n    }), $[11] = t5, $[12] = t6) : t6 = $[12];\n    let t7;\n    return $[13] !== t2 || $[14] !== t4 || $[15] !== t6 ? (t7 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_29__.Card, {\n        height: \"fill\",\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_29__.Flex, {\n            align: \"center\",\n            height: \"fill\",\n            justify: \"center\",\n            padding: 4,\n            sizing: \"border\",\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_29__.Container, {\n                width: 0,\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_29__.Card, {\n                    padding: 4,\n                    radius: 2,\n                    shadow: 1,\n                    tone: \"caution\",\n                    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_29__.Flex, {\n                        children: [\n                            t0,\n                            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_29__.Stack, {\n                                flex: 1,\n                                marginLeft: 3,\n                                space: 3,\n                                children: [\n                                    t2,\n                                    t4,\n                                    t6\n                                ]\n                            })\n                        ]\n                    })\n                })\n            })\n        })\n    }), $[13] = t2, $[14] = t4, $[15] = t6, $[16] = t7) : t7 = $[16], t7;\n}\n_s4(NoDocumentTypesScreen, \"Yrsn01qslWz190wTviS4U6ElodY=\", false, function() {\n    return [\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useTranslation,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useTranslation\n    ];\n});\n_c2 = NoDocumentTypesScreen;\nconst DocumentTitle = (props)=>{\n    _s5();\n    const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_2__.c)(7), { documentId, documentType } = props, { selectedReleaseId } = (0,sanity__WEBPACK_IMPORTED_MODULE_7__.usePerspective)(), editState = (0,sanity__WEBPACK_IMPORTED_MODULE_7__.useEditState)(documentId, documentType, \"default\", selectedReleaseId), schema = (0,sanity__WEBPACK_IMPORTED_MODULE_7__.useSchema)(), { t } = (0,sanity__WEBPACK_IMPORTED_MODULE_7__.useTranslation)(_StructureToolProvider_mjs__WEBPACK_IMPORTED_MODULE_28__.structureLocaleNamespace), isNewDocument = !(editState === null || editState === void 0 ? void 0 : editState.published) && !(editState === null || editState === void 0 ? void 0 : editState.draft), documentValue = (editState === null || editState === void 0 ? void 0 : editState.version) || (editState === null || editState === void 0 ? void 0 : editState.draft) || (editState === null || editState === void 0 ? void 0 : editState.published), schemaType = schema.get(documentType), { value, isLoading: previewValueIsLoading } = (0,sanity__WEBPACK_IMPORTED_MODULE_7__.unstable_useValuePreview)({\n        enabled: !!documentValue,\n        schemaType,\n        value: documentValue\n    }), { lastRevisionDocument } = (0,_pane_mjs__WEBPACK_IMPORTED_MODULE_25__.useDocumentLastRev)(documentId, documentType), documentTitle = lastRevisionDocument && !documentValue ? \"\" : isNewDocument ? t(\"browser-document-title.new-document\", {\n        schemaType: (schemaType === null || schemaType === void 0 ? void 0 : schemaType.title) || (schemaType === null || schemaType === void 0 ? void 0 : schemaType.name)\n    }) : (value === null || value === void 0 ? void 0 : value.title) || t(\"browser-document-title.untitled-document\"), settled = editState.ready && !previewValueIsLoading, newTitle = useConstructDocumentTitle(documentTitle);\n    let t0;\n    $[0] !== newTitle || $[1] !== settled ? (t0 = ()=>{\n        settled && (document.title = newTitle);\n    }, $[0] = newTitle, $[1] = settled, $[2] = t0) : t0 = $[2];\n    let t1;\n    return $[3] !== documentTitle || $[4] !== newTitle || $[5] !== settled ? (t1 = [\n        documentTitle,\n        settled,\n        newTitle\n    ], $[3] = documentTitle, $[4] = newTitle, $[5] = settled, $[6] = t1) : t1 = $[6], (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(t0, t1), null;\n}, PassthroughTitle = (props)=>{\n    _s6();\n    const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_2__.c)(5), { title } = props, newTitle = useConstructDocumentTitle(title);\n    let t0;\n    $[0] !== newTitle ? (t0 = ()=>{\n        document.title = newTitle;\n    }, $[0] = newTitle, $[1] = t0) : t0 = $[1];\n    let t1;\n    return $[2] !== newTitle || $[3] !== title ? (t1 = [\n        newTitle,\n        title\n    ], $[2] = newTitle, $[3] = title, $[4] = t1) : t1 = $[4], (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(t0, t1), null;\n}, StructureTitle = (props)=>{\n    const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_2__.c)(8), { resolvedPanes } = props;\n    if (!(resolvedPanes === null || resolvedPanes === void 0 ? void 0 : resolvedPanes.length)) return null;\n    const lastPane = resolvedPanes[resolvedPanes.length - 1];\n    if (isLoadingPane(lastPane)) {\n        let t02;\n        return $[0] === Symbol.for(\"react.memo_cache_sentinel\") ? (t02 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PassthroughTitle, {}), $[0] = t02) : t02 = $[0], t02;\n    }\n    if (isDocumentPane(lastPane)) {\n        if (lastPane === null || lastPane === void 0 ? void 0 : lastPane.title) {\n            let t03;\n            return $[1] !== lastPane.title ? (t03 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PassthroughTitle, {\n                title: lastPane.title\n            }), $[1] = lastPane.title, $[2] = t03) : t03 = $[2], t03;\n        }\n        let t02;\n        return $[3] !== lastPane.options.id || $[4] !== lastPane.options.type ? (t02 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(DocumentTitle, {\n            documentId: lastPane.options.id,\n            documentType: lastPane.options.type\n        }), $[3] = lastPane.options.id, $[4] = lastPane.options.type, $[5] = t02) : t02 = $[5], t02;\n    }\n    const t0 = lastPane === null || lastPane === void 0 ? void 0 : lastPane.title;\n    let t1;\n    return $[6] !== t0 ? (t1 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PassthroughTitle, {\n        title: t0\n    }), $[6] = t0, $[7] = t1) : t1 = $[7], t1;\n};\n_s5(DocumentTitle, \"l8E+mIHZ42GrOK1vUanarqz4PQY=\", false, function() {\n    return [\n        sanity__WEBPACK_IMPORTED_MODULE_7__.usePerspective,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useEditState,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useSchema,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useTranslation,\n        _pane_mjs__WEBPACK_IMPORTED_MODULE_25__.useDocumentLastRev,\n        useConstructDocumentTitle,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.usePerspective,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useEditState,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useSchema,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useTranslation,\n        _pane_mjs__WEBPACK_IMPORTED_MODULE_25__.useDocumentLastRev,\n        useConstructDocumentTitle,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.usePerspective,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useEditState,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useSchema,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useTranslation,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.usePerspective,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useEditState,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useSchema,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useTranslation,\n        _pane_mjs__WEBPACK_IMPORTED_MODULE_25__.useDocumentLastRev,\n        useConstructDocumentTitle,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.usePerspective,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useEditState,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useSchema,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useTranslation,\n        _pane_mjs__WEBPACK_IMPORTED_MODULE_25__.useDocumentLastRev,\n        useConstructDocumentTitle,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.usePerspective,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useEditState,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useSchema,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useTranslation,\n        _pane_mjs__WEBPACK_IMPORTED_MODULE_25__.useDocumentLastRev,\n        useConstructDocumentTitle,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.usePerspective,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useEditState,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useSchema,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useTranslation,\n        _pane_mjs__WEBPACK_IMPORTED_MODULE_25__.useDocumentLastRev,\n        useConstructDocumentTitle,\n        _pane_mjs__WEBPACK_IMPORTED_MODULE_25__.useDocumentLastRev,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.usePerspective,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useEditState,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useSchema,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useTranslation,\n        _pane_mjs__WEBPACK_IMPORTED_MODULE_25__.useDocumentLastRev,\n        useConstructDocumentTitle,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.usePerspective,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useEditState,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useSchema,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useTranslation,\n        _pane_mjs__WEBPACK_IMPORTED_MODULE_25__.useDocumentLastRev,\n        useConstructDocumentTitle,\n        useConstructDocumentTitle\n    ];\n});\n_s6(PassthroughTitle, \"75eDM1YkSe33khpu7RKC6CNjG28=\", false, function() {\n    return [\n        useConstructDocumentTitle,\n        useConstructDocumentTitle,\n        useConstructDocumentTitle\n    ];\n});\nfunction useConstructDocumentTitle(activeTitle) {\n    _s7();\n    const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_2__.c)(3), structureToolBaseTitle = (0,_pane_mjs__WEBPACK_IMPORTED_MODULE_25__.useStructureTool)().structureContext.title;\n    let t0;\n    return $[0] !== activeTitle || $[1] !== structureToolBaseTitle ? (t0 = [\n        activeTitle,\n        structureToolBaseTitle\n    ].filter(_temp$2), $[0] = activeTitle, $[1] = structureToolBaseTitle, $[2] = t0) : t0 = $[2], t0.join(\" | \");\n}\n_s7(useConstructDocumentTitle, \"r8HbgJh2cPYrUp656vfsBzBrJAI=\", false, function() {\n    return [\n        _pane_mjs__WEBPACK_IMPORTED_MODULE_25__.useStructureTool,\n        _pane_mjs__WEBPACK_IMPORTED_MODULE_25__.useStructureTool\n    ];\n});\nfunction _temp$2(title) {\n    return title;\n}\nfunction isDocumentPane(pane) {\n    return pane !== _pane_mjs__WEBPACK_IMPORTED_MODULE_25__.LOADING_PANE && pane.type === \"document\";\n}\nfunction isLoadingPane(pane) {\n    return pane === _pane_mjs__WEBPACK_IMPORTED_MODULE_25__.LOADING_PANE;\n}\nconst StyledPaneLayout = (0,styled_components__WEBPACK_IMPORTED_MODULE_27__.styled)(_pane_mjs__WEBPACK_IMPORTED_MODULE_25__.PaneLayout)(_templateObject1()), isSaveHotkey = (0,is_hotkey_esm__WEBPACK_IMPORTED_MODULE_31__.isHotkey)(\"mod+s\"), StructureTool = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_3__.memo)(_s8(function(t0) {\n    var _schema__original;\n    _s8();\n    const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_2__.c)(31), { onPaneChange } = t0, { push: pushToast } = (0,_sanity_ui__WEBPACK_IMPORTED_MODULE_32__.useToast)(), schema = (0,sanity__WEBPACK_IMPORTED_MODULE_7__.useSchema)(), { layoutCollapsed, setLayoutCollapsed } = (0,_pane_mjs__WEBPACK_IMPORTED_MODULE_25__.useStructureTool)(), { paneDataItems, resolvedPanes } = useResolvedPanes(), isResolvingIntent = (0,sanity_router__WEBPACK_IMPORTED_MODULE_23__.useRouterState)(_temp$1), { sanity: t1 } = (0,_sanity_ui__WEBPACK_IMPORTED_MODULE_29__.useTheme)(), { media } = t1, [portalElement, setPortalElement] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(null);\n    let t2;\n    $[0] !== setLayoutCollapsed ? (t2 = ()=>setLayoutCollapsed(!0), $[0] = setLayoutCollapsed, $[1] = t2) : t2 = $[1];\n    const handleRootCollapse = t2;\n    let t3;\n    $[2] !== setLayoutCollapsed ? (t3 = ()=>setLayoutCollapsed(!1), $[2] = setLayoutCollapsed, $[3] = t3) : t3 = $[3];\n    const handleRootExpand = t3;\n    let t4, t5;\n    $[4] !== onPaneChange || $[5] !== resolvedPanes ? (t4 = ()=>{\n        resolvedPanes.length && onPaneChange(resolvedPanes);\n    }, t5 = [\n        onPaneChange,\n        resolvedPanes\n    ], $[4] = onPaneChange, $[5] = resolvedPanes, $[6] = t4, $[7] = t5) : (t4 = $[6], t5 = $[7]), (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(t4, t5);\n    let t6, t7;\n    if ($[8] !== pushToast ? (t6 = ()=>{\n        const handleGlobalKeyDown = (event)=>{\n            isSaveHotkey(event) && (event.preventDefault(), pushToast({\n                closable: !0,\n                id: \"auto-save-message\",\n                status: \"info\",\n                title: \"Your work is automatically saved!\",\n                duration: 4e3\n            }));\n        };\n        return window.addEventListener(\"keydown\", handleGlobalKeyDown), ()=>window.removeEventListener(\"keydown\", handleGlobalKeyDown);\n    }, t7 = [\n        pushToast\n    ], $[8] = pushToast, $[9] = t6, $[10] = t7) : (t6 = $[9], t7 = $[10]), (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(t6, t7), !((_schema__original = schema._original) === null || _schema__original === void 0 ? void 0 : _schema__original.types.some(sanity__WEBPACK_IMPORTED_MODULE_7__._isCustomDocumentTypeDefinition))) {\n        let t82;\n        return $[11] === Symbol.for(\"react.memo_cache_sentinel\") ? (t82 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(NoDocumentTypesScreen, {}), $[11] = t82) : t82 = $[11], t82;\n    }\n    const t8 = portalElement || null, t9 = layoutCollapsed ? void 0 : \"fill\", t10 = media[1];\n    let t11;\n    $[12] !== paneDataItems ? (t11 = paneDataItems.map(_temp2$1), $[12] = paneDataItems, $[13] = t11) : t11 = $[13];\n    let t12;\n    $[14] !== isResolvingIntent || $[15] !== paneDataItems.length ? (t12 = paneDataItems.length <= 1 && isResolvingIntent && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pane_mjs__WEBPACK_IMPORTED_MODULE_25__.LoadingPane, {\n        paneKey: \"intent-resolver\"\n    }), $[14] = isResolvingIntent, $[15] = paneDataItems.length, $[16] = t12) : t12 = $[16];\n    let t13;\n    $[17] !== handleRootCollapse || $[18] !== handleRootExpand || $[19] !== media[1] || $[20] !== t11 || $[21] !== t12 || $[22] !== t9 ? (t13 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(StyledPaneLayout, {\n        flex: 1,\n        height: t9,\n        minWidth: t10,\n        onCollapse: handleRootCollapse,\n        onExpand: handleRootExpand,\n        children: [\n            t11,\n            t12\n        ]\n    }), $[17] = handleRootCollapse, $[18] = handleRootExpand, $[19] = media[1], $[20] = t11, $[21] = t12, $[22] = t9, $[23] = t13) : t13 = $[23];\n    let t14;\n    $[24] !== resolvedPanes ? (t14 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(StructureTitle, {\n        resolvedPanes\n    }), $[24] = resolvedPanes, $[25] = t14) : t14 = $[25];\n    let t15;\n    $[26] === Symbol.for(\"react.memo_cache_sentinel\") ? (t15 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n        \"data-portal\": \"\",\n        ref: setPortalElement\n    }), $[26] = t15) : t15 = $[26];\n    let t16;\n    return $[27] !== t13 || $[28] !== t14 || $[29] !== t8 ? (t16 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_29__.PortalProvider, {\n        element: t8,\n        children: [\n            t13,\n            t14,\n            t15\n        ]\n    }), $[27] = t13, $[28] = t14, $[29] = t8, $[30] = t16) : t16 = $[30], t16;\n}, \"jll7v0stisv+3gaNOpeezcaP8J8=\", false, function() {\n    return [\n        _sanity_ui__WEBPACK_IMPORTED_MODULE_32__.useToast,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useSchema,\n        _pane_mjs__WEBPACK_IMPORTED_MODULE_25__.useStructureTool,\n        useResolvedPanes,\n        sanity_router__WEBPACK_IMPORTED_MODULE_23__.useRouterState,\n        _sanity_ui__WEBPACK_IMPORTED_MODULE_29__.useTheme,\n        _sanity_ui__WEBPACK_IMPORTED_MODULE_32__.useToast,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useSchema,\n        _pane_mjs__WEBPACK_IMPORTED_MODULE_25__.useStructureTool,\n        useResolvedPanes,\n        sanity_router__WEBPACK_IMPORTED_MODULE_23__.useRouterState,\n        _sanity_ui__WEBPACK_IMPORTED_MODULE_29__.useTheme,\n        _sanity_ui__WEBPACK_IMPORTED_MODULE_32__.useToast,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useSchema,\n        _pane_mjs__WEBPACK_IMPORTED_MODULE_25__.useStructureTool,\n        useResolvedPanes,\n        sanity_router__WEBPACK_IMPORTED_MODULE_23__.useRouterState,\n        _sanity_ui__WEBPACK_IMPORTED_MODULE_29__.useTheme,\n        _sanity_ui__WEBPACK_IMPORTED_MODULE_32__.useToast,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useSchema,\n        _pane_mjs__WEBPACK_IMPORTED_MODULE_25__.useStructureTool,\n        useResolvedPanes,\n        sanity_router__WEBPACK_IMPORTED_MODULE_23__.useRouterState,\n        _sanity_ui__WEBPACK_IMPORTED_MODULE_29__.useTheme\n    ];\n}));\nfunction _temp$1(routerState) {\n    return typeof routerState.intent == \"string\";\n}\nfunction _temp2$1(t0) {\n    const { active, childItemId, groupIndex, itemId, key: paneKey, pane, index: paneIndex, params: paneParams, path, payload, siblingIndex, selected } = t0;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react__WEBPACK_IMPORTED_MODULE_3__.Fragment, {\n        children: pane === _pane_mjs__WEBPACK_IMPORTED_MODULE_25__.LOADING_PANE ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pane_mjs__WEBPACK_IMPORTED_MODULE_25__.LoadingPane, {\n            paneKey,\n            path,\n            selected\n        }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pane_mjs__WEBPACK_IMPORTED_MODULE_25__.StructureToolPane, {\n            active,\n            groupIndex,\n            index: paneIndex,\n            pane,\n            childItemId,\n            itemId,\n            paneKey,\n            params: paneParams,\n            payload,\n            path,\n            selected,\n            siblingIndex\n        })\n    }, \"\".concat(pane === _pane_mjs__WEBPACK_IMPORTED_MODULE_25__.LOADING_PANE ? \"loading\" : pane.type, \"-\").concat(paneIndex));\n}\nfunction StructureToolBoundary(t0) {\n    _s9();\n    const $ = (0,react_compiler_runtime__WEBPACK_IMPORTED_MODULE_2__.c)(14), { tool: t1 } = t0, { options } = t1, { unstable_sources: sources } = (0,sanity__WEBPACK_IMPORTED_MODULE_7__.useWorkspace)(), [firstSource] = sources;\n    let t2;\n    $[0] !== options ? (t2 = options || {}, $[0] = options, $[1] = t2) : t2 = $[1];\n    const { source, defaultDocumentNode, structure } = t2;\n    let t3;\n    $[2] === Symbol.for(\"react.memo_cache_sentinel\") ? (t3 = [], $[2] = t3) : t3 = $[2], (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(_temp2, t3);\n    let t4;\n    $[3] === Symbol.for(\"react.memo_cache_sentinel\") ? (t4 = {\n        error: null\n    }, $[3] = t4) : t4 = $[3];\n    const [t5, setError] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(t4), { error } = t5;\n    if (error) {\n        let t62;\n        return $[4] !== error ? (t62 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(StructureError, {\n            error\n        }), $[4] = error, $[5] = t62) : t62 = $[5], t62;\n    }\n    const t6 = source || firstSource.name;\n    let t7, t8;\n    $[6] === Symbol.for(\"react.memo_cache_sentinel\") ? (t7 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(StructureTool, {\n        onPaneChange: _pane_mjs__WEBPACK_IMPORTED_MODULE_25__.setActivePanes\n    }), t8 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(IntentResolver, {}), $[6] = t7, $[7] = t8) : (t7 = $[6], t8 = $[7]);\n    let t9;\n    $[8] !== defaultDocumentNode || $[9] !== structure ? (t9 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_StructureToolProvider_mjs__WEBPACK_IMPORTED_MODULE_28__.StructureToolProvider, {\n        defaultDocumentNode,\n        structure,\n        children: [\n            t7,\n            t8\n        ]\n    }), $[8] = defaultDocumentNode, $[9] = structure, $[10] = t9) : t9 = $[10];\n    let t10;\n    return $[11] !== t6 || $[12] !== t9 ? (t10 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_generate_help_url_esm_mjs__WEBPACK_IMPORTED_MODULE_17__.ErrorBoundary, {\n        onCatch: setError,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(sanity__WEBPACK_IMPORTED_MODULE_7__.SourceProvider, {\n            name: t6,\n            children: t9\n        })\n    }), $[11] = t6, $[12] = t9, $[13] = t10) : t10 = $[13], t10;\n}\n_s9(StructureToolBoundary, \"Yi6EXfWazZYrgFNGrl9XAlzcSZE=\", false, function() {\n    return [\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useWorkspace,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useWorkspace,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useWorkspace,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useWorkspace,\n        sanity__WEBPACK_IMPORTED_MODULE_7__.useWorkspace\n    ];\n});\n_c3 = StructureToolBoundary;\nfunction _temp2() {\n    return (0,_pane_mjs__WEBPACK_IMPORTED_MODULE_25__.setActivePanes)([]), _temp;\n}\nfunction _temp() {\n    return (0,_pane_mjs__WEBPACK_IMPORTED_MODULE_25__.setActivePanes)([]);\n}\n //# sourceMappingURL=index3.mjs.map\nvar _c, _c1, _c2, _c3;\n$RefreshReg$(_c, \"PathSegment\");\n$RefreshReg$(_c1, \"StructureError\");\n$RefreshReg$(_c2, \"NoDocumentTypesScreen\");\n$RefreshReg$(_c3, \"StructureToolBoundary\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/../node_modules/sanity/lib/_chunks-es/index3.mjs\n"));

/***/ })

}]);