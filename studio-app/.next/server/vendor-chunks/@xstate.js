"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@xstate";
exports.ids = ["vendor-chunks/@xstate"];
exports.modules = {

/***/ "(ssr)/../node_modules/@xstate/react/dist/xstate-react.development.esm.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@xstate/react/dist/xstate-react.development.esm.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createActorContext: () => (/* binding */ createActorContext),\n/* harmony export */   shallowEqual: () => (/* binding */ shallowEqual),\n/* harmony export */   useActor: () => (/* binding */ useActor),\n/* harmony export */   useActorRef: () => (/* binding */ useActorRef),\n/* harmony export */   useMachine: () => (/* binding */ useMachine),\n/* harmony export */   useSelector: () => (/* binding */ useSelector)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/../node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var use_isomorphic_layout_effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! use-isomorphic-layout-effect */ \"(ssr)/../node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! xstate */ \"(ssr)/../node_modules/xstate/dist/raise-f7b216be.development.esm.js\");\n/* harmony import */ var use_sync_external_store_shim_with_selector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! use-sync-external-store/shim/with-selector */ \"(ssr)/../node_modules/use-sync-external-store/shim/with-selector.js\");\n/* harmony import */ var use_sync_external_store_shim__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! use-sync-external-store/shim */ \"(ssr)/../node_modules/use-sync-external-store/shim/index.js\");\n\n\n\n\n\n\n\nconst forEachActor = (actorRef, callback) => {\n  callback(actorRef);\n  const children = actorRef.getSnapshot().children;\n  if (children) {\n    Object.values(children).forEach(child => {\n      forEachActor(child, callback);\n    });\n  }\n};\nfunction stopRootWithRehydration(actorRef) {\n  // persist snapshot here in a custom way allows us to persist inline actors and to preserve actor references\n  // we do it to avoid setState in useEffect when the effect gets \"reconnected\"\n  // this currently only happens in Strict Effects but it simulates the Offscreen aka Activity API\n  // it also just allows us to end up with a somewhat more predictable behavior for the users\n  const persistedSnapshots = [];\n  forEachActor(actorRef, ref => {\n    persistedSnapshots.push([ref, ref.getSnapshot()]);\n    // muting observers allow us to avoid `useSelector` from being notified about the stopped snapshot\n    // React reconnects its subscribers (from the useSyncExternalStore) on its own\n    // and userland subscribers should basically always do the same anyway\n    // as each subscription should have its own cleanup logic and that should be called each such reconnect\n    ref.observers = new Set();\n  });\n  const systemSnapshot = actorRef.system.getSnapshot?.();\n  actorRef.stop();\n  actorRef.system._snapshot = systemSnapshot;\n  persistedSnapshots.forEach(([ref, snapshot]) => {\n    ref._processingStatus = 0;\n    ref._snapshot = snapshot;\n  });\n}\n\nfunction useIdleActorRef(logic, ...[options]) {\n  let [[currentConfig, actorRef], setCurrent] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => {\n    const actorRef = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.c)(logic, options);\n    return [logic.config, actorRef];\n  });\n  if (logic.config !== currentConfig) {\n    const newActorRef = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.c)(logic, {\n      ...options,\n      snapshot: actorRef.getPersistedSnapshot({\n        __unsafeAllowInlineActors: true\n      })\n    });\n    setCurrent([logic.config, newActorRef]);\n    actorRef = newActorRef;\n  }\n\n  // TODO: consider using `useAsapEffect` that would do this in `useInsertionEffect` is that's available\n  (0,use_isomorphic_layout_effect__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(() => {\n    actorRef.logic.implementations = logic.implementations;\n  });\n  return actorRef;\n}\nfunction useActorRef(machine, ...[options, observerOrListener]) {\n  const actorRef = useIdleActorRef(machine, options);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!observerOrListener) {\n      return;\n    }\n    const sub = actorRef.subscribe((0,xstate__WEBPACK_IMPORTED_MODULE_4__.j)(observerOrListener));\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [observerOrListener]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    actorRef.start();\n    return () => {\n      stopRootWithRehydration(actorRef);\n    };\n  }, [actorRef]);\n  return actorRef;\n}\n\nfunction defaultCompare(a, b) {\n  return a === b;\n}\nfunction useSelector(actor, selector, compare = defaultCompare) {\n  const subscribe = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(handleStoreChange => {\n    if (!actor) {\n      return () => {};\n    }\n    const {\n      unsubscribe\n    } = actor.subscribe(handleStoreChange);\n    return unsubscribe;\n  }, [actor]);\n  const boundGetSnapshot = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => actor?.getSnapshot(), [actor]);\n  const selectedSnapshot = (0,use_sync_external_store_shim_with_selector__WEBPACK_IMPORTED_MODULE_2__.useSyncExternalStoreWithSelector)(subscribe, boundGetSnapshot, boundGetSnapshot, selector, compare);\n  return selectedSnapshot;\n}\n\nfunction createActorContext(actorLogic, actorOptions) {\n  const ReactContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\n  const OriginalProvider = ReactContext.Provider;\n  function Provider({\n    children,\n    logic: providedLogic = actorLogic,\n    machine,\n    options: providedOptions\n  }) {\n    if (machine) {\n      throw new Error(`The \"machine\" prop has been deprecated. Please use \"logic\" instead.`);\n    }\n    const actor = useActorRef(providedLogic, {\n      ...actorOptions,\n      ...providedOptions\n    });\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(OriginalProvider, {\n      value: actor,\n      children\n    });\n  }\n\n  // TODO: add properties to actor ref to make more descriptive\n  Provider.displayName = `ActorProvider`;\n  function useContext() {\n    const actor = react__WEBPACK_IMPORTED_MODULE_0__.useContext(ReactContext);\n    if (!actor) {\n      throw new Error(`You used a hook from \"${Provider.displayName}\" but it's not inside a <${Provider.displayName}> component.`);\n    }\n    return actor;\n  }\n  function useSelector$1(selector, compare) {\n    const actor = useContext();\n    return useSelector(actor, selector, compare);\n  }\n  return {\n    Provider: Provider,\n    useActorRef: useContext,\n    useSelector: useSelector$1\n  };\n}\n\n// From https://github.com/reduxjs/react-redux/blob/720f0ba79236cdc3e1115f4ef9a7760a21784b48/src/utils/shallowEqual.ts\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) return true;\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return false;\n  for (let i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction useActor(logic, ...[options]) {\n  if (!!logic && 'send' in logic && typeof logic.send === 'function') {\n    throw new Error(`useActor() expects actor logic (e.g. a machine), but received an ActorRef. Use the useSelector(actorRef, ...) hook instead to read the ActorRef's snapshot.`);\n  }\n  const actorRef = useIdleActorRef(logic, options);\n  const getSnapshot = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    return actorRef.getSnapshot();\n  }, [actorRef]);\n  const subscribe = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(handleStoreChange => {\n    const {\n      unsubscribe\n    } = actorRef.subscribe(handleStoreChange);\n    return unsubscribe;\n  }, [actorRef]);\n  const actorSnapshot = (0,use_sync_external_store_shim__WEBPACK_IMPORTED_MODULE_3__.useSyncExternalStore)(subscribe, getSnapshot, getSnapshot);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    actorRef.start();\n    return () => {\n      stopRootWithRehydration(actorRef);\n    };\n  }, [actorRef]);\n  return [actorSnapshot, actorRef.send, actorRef];\n}\n\n/** @alias useActor */\nfunction useMachine(machine, ...[options]) {\n  return useActor(machine, options);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B4c3RhdGUvcmVhY3QvZGlzdC94c3RhdGUtcmVhY3QuZGV2ZWxvcG1lbnQuZXNtLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUErQjtBQUMwQjtBQUNZO0FBQ3BCO0FBQzZDO0FBQzFCOztBQUVwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBLGdEQUFnRCwrQ0FBUTtBQUN4RCxxQkFBcUIseUNBQVc7QUFDaEM7QUFDQSxHQUFHO0FBQ0g7QUFDQSx3QkFBd0IseUNBQVc7QUFDbkM7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxFQUFFLHdFQUF5QjtBQUMzQjtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsZ0RBQVM7QUFDWDtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMseUNBQVU7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILEVBQUUsZ0RBQVM7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGtEQUFXO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxHQUFHO0FBQ0gsMkJBQTJCLGtEQUFXO0FBQ3RDLDJCQUEyQiw0R0FBZ0M7QUFDM0Q7QUFDQTs7QUFFQTtBQUNBLG9DQUFvQyxnREFBbUI7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCx3QkFBd0IsZ0RBQW1CO0FBQzNDO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDZDQUFnQjtBQUNsQztBQUNBLCtDQUErQyxxQkFBcUIsMkJBQTJCLHFCQUFxQjtBQUNwSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGtCQUFrQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixrREFBVztBQUNqQztBQUNBLEdBQUc7QUFDSCxvQkFBb0Isa0RBQVc7QUFDL0I7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLEdBQUc7QUFDSCx3QkFBd0Isa0ZBQW9CO0FBQzVDLEVBQUUsZ0RBQVM7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUU0RiIsInNvdXJjZXMiOlsiL1VzZXJzL0dhbG9jay9DUy9iZWhvbWUtc2l0ZS9ub2RlX21vZHVsZXMvQHhzdGF0ZS9yZWFjdC9kaXN0L3hzdGF0ZS1yZWFjdC5kZXZlbG9wbWVudC5lc20uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSwgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCBmcm9tICd1c2UtaXNvbW9ycGhpYy1sYXlvdXQtZWZmZWN0JztcbmltcG9ydCB7IHRvT2JzZXJ2ZXIsIGNyZWF0ZUFjdG9yIH0gZnJvbSAneHN0YXRlJztcbmltcG9ydCB7IHVzZVN5bmNFeHRlcm5hbFN0b3JlV2l0aFNlbGVjdG9yIH0gZnJvbSAndXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvc2hpbS93aXRoLXNlbGVjdG9yJztcbmltcG9ydCB7IHVzZVN5bmNFeHRlcm5hbFN0b3JlIH0gZnJvbSAndXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvc2hpbSc7XG5cbmNvbnN0IGZvckVhY2hBY3RvciA9IChhY3RvclJlZiwgY2FsbGJhY2spID0+IHtcbiAgY2FsbGJhY2soYWN0b3JSZWYpO1xuICBjb25zdCBjaGlsZHJlbiA9IGFjdG9yUmVmLmdldFNuYXBzaG90KCkuY2hpbGRyZW47XG4gIGlmIChjaGlsZHJlbikge1xuICAgIE9iamVjdC52YWx1ZXMoY2hpbGRyZW4pLmZvckVhY2goY2hpbGQgPT4ge1xuICAgICAgZm9yRWFjaEFjdG9yKGNoaWxkLCBjYWxsYmFjayk7XG4gICAgfSk7XG4gIH1cbn07XG5mdW5jdGlvbiBzdG9wUm9vdFdpdGhSZWh5ZHJhdGlvbihhY3RvclJlZikge1xuICAvLyBwZXJzaXN0IHNuYXBzaG90IGhlcmUgaW4gYSBjdXN0b20gd2F5IGFsbG93cyB1cyB0byBwZXJzaXN0IGlubGluZSBhY3RvcnMgYW5kIHRvIHByZXNlcnZlIGFjdG9yIHJlZmVyZW5jZXNcbiAgLy8gd2UgZG8gaXQgdG8gYXZvaWQgc2V0U3RhdGUgaW4gdXNlRWZmZWN0IHdoZW4gdGhlIGVmZmVjdCBnZXRzIFwicmVjb25uZWN0ZWRcIlxuICAvLyB0aGlzIGN1cnJlbnRseSBvbmx5IGhhcHBlbnMgaW4gU3RyaWN0IEVmZmVjdHMgYnV0IGl0IHNpbXVsYXRlcyB0aGUgT2Zmc2NyZWVuIGFrYSBBY3Rpdml0eSBBUElcbiAgLy8gaXQgYWxzbyBqdXN0IGFsbG93cyB1cyB0byBlbmQgdXAgd2l0aCBhIHNvbWV3aGF0IG1vcmUgcHJlZGljdGFibGUgYmVoYXZpb3IgZm9yIHRoZSB1c2Vyc1xuICBjb25zdCBwZXJzaXN0ZWRTbmFwc2hvdHMgPSBbXTtcbiAgZm9yRWFjaEFjdG9yKGFjdG9yUmVmLCByZWYgPT4ge1xuICAgIHBlcnNpc3RlZFNuYXBzaG90cy5wdXNoKFtyZWYsIHJlZi5nZXRTbmFwc2hvdCgpXSk7XG4gICAgLy8gbXV0aW5nIG9ic2VydmVycyBhbGxvdyB1cyB0byBhdm9pZCBgdXNlU2VsZWN0b3JgIGZyb20gYmVpbmcgbm90aWZpZWQgYWJvdXQgdGhlIHN0b3BwZWQgc25hcHNob3RcbiAgICAvLyBSZWFjdCByZWNvbm5lY3RzIGl0cyBzdWJzY3JpYmVycyAoZnJvbSB0aGUgdXNlU3luY0V4dGVybmFsU3RvcmUpIG9uIGl0cyBvd25cbiAgICAvLyBhbmQgdXNlcmxhbmQgc3Vic2NyaWJlcnMgc2hvdWxkIGJhc2ljYWxseSBhbHdheXMgZG8gdGhlIHNhbWUgYW55d2F5XG4gICAgLy8gYXMgZWFjaCBzdWJzY3JpcHRpb24gc2hvdWxkIGhhdmUgaXRzIG93biBjbGVhbnVwIGxvZ2ljIGFuZCB0aGF0IHNob3VsZCBiZSBjYWxsZWQgZWFjaCBzdWNoIHJlY29ubmVjdFxuICAgIHJlZi5vYnNlcnZlcnMgPSBuZXcgU2V0KCk7XG4gIH0pO1xuICBjb25zdCBzeXN0ZW1TbmFwc2hvdCA9IGFjdG9yUmVmLnN5c3RlbS5nZXRTbmFwc2hvdD8uKCk7XG4gIGFjdG9yUmVmLnN0b3AoKTtcbiAgYWN0b3JSZWYuc3lzdGVtLl9zbmFwc2hvdCA9IHN5c3RlbVNuYXBzaG90O1xuICBwZXJzaXN0ZWRTbmFwc2hvdHMuZm9yRWFjaCgoW3JlZiwgc25hcHNob3RdKSA9PiB7XG4gICAgcmVmLl9wcm9jZXNzaW5nU3RhdHVzID0gMDtcbiAgICByZWYuX3NuYXBzaG90ID0gc25hcHNob3Q7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiB1c2VJZGxlQWN0b3JSZWYobG9naWMsIC4uLltvcHRpb25zXSkge1xuICBsZXQgW1tjdXJyZW50Q29uZmlnLCBhY3RvclJlZl0sIHNldEN1cnJlbnRdID0gdXNlU3RhdGUoKCkgPT4ge1xuICAgIGNvbnN0IGFjdG9yUmVmID0gY3JlYXRlQWN0b3IobG9naWMsIG9wdGlvbnMpO1xuICAgIHJldHVybiBbbG9naWMuY29uZmlnLCBhY3RvclJlZl07XG4gIH0pO1xuICBpZiAobG9naWMuY29uZmlnICE9PSBjdXJyZW50Q29uZmlnKSB7XG4gICAgY29uc3QgbmV3QWN0b3JSZWYgPSBjcmVhdGVBY3Rvcihsb2dpYywge1xuICAgICAgLi4ub3B0aW9ucyxcbiAgICAgIHNuYXBzaG90OiBhY3RvclJlZi5nZXRQZXJzaXN0ZWRTbmFwc2hvdCh7XG4gICAgICAgIF9fdW5zYWZlQWxsb3dJbmxpbmVBY3RvcnM6IHRydWVcbiAgICAgIH0pXG4gICAgfSk7XG4gICAgc2V0Q3VycmVudChbbG9naWMuY29uZmlnLCBuZXdBY3RvclJlZl0pO1xuICAgIGFjdG9yUmVmID0gbmV3QWN0b3JSZWY7XG4gIH1cblxuICAvLyBUT0RPOiBjb25zaWRlciB1c2luZyBgdXNlQXNhcEVmZmVjdGAgdGhhdCB3b3VsZCBkbyB0aGlzIGluIGB1c2VJbnNlcnRpb25FZmZlY3RgIGlzIHRoYXQncyBhdmFpbGFibGVcbiAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCgoKSA9PiB7XG4gICAgYWN0b3JSZWYubG9naWMuaW1wbGVtZW50YXRpb25zID0gbG9naWMuaW1wbGVtZW50YXRpb25zO1xuICB9KTtcbiAgcmV0dXJuIGFjdG9yUmVmO1xufVxuZnVuY3Rpb24gdXNlQWN0b3JSZWYobWFjaGluZSwgLi4uW29wdGlvbnMsIG9ic2VydmVyT3JMaXN0ZW5lcl0pIHtcbiAgY29uc3QgYWN0b3JSZWYgPSB1c2VJZGxlQWN0b3JSZWYobWFjaGluZSwgb3B0aW9ucyk7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFvYnNlcnZlck9yTGlzdGVuZXIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3Qgc3ViID0gYWN0b3JSZWYuc3Vic2NyaWJlKHRvT2JzZXJ2ZXIob2JzZXJ2ZXJPckxpc3RlbmVyKSk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHN1Yi51bnN1YnNjcmliZSgpO1xuICAgIH07XG4gIH0sIFtvYnNlcnZlck9yTGlzdGVuZXJdKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBhY3RvclJlZi5zdGFydCgpO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBzdG9wUm9vdFdpdGhSZWh5ZHJhdGlvbihhY3RvclJlZik7XG4gICAgfTtcbiAgfSwgW2FjdG9yUmVmXSk7XG4gIHJldHVybiBhY3RvclJlZjtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdENvbXBhcmUoYSwgYikge1xuICByZXR1cm4gYSA9PT0gYjtcbn1cbmZ1bmN0aW9uIHVzZVNlbGVjdG9yKGFjdG9yLCBzZWxlY3RvciwgY29tcGFyZSA9IGRlZmF1bHRDb21wYXJlKSB7XG4gIGNvbnN0IHN1YnNjcmliZSA9IHVzZUNhbGxiYWNrKGhhbmRsZVN0b3JlQ2hhbmdlID0+IHtcbiAgICBpZiAoIWFjdG9yKSB7XG4gICAgICByZXR1cm4gKCkgPT4ge307XG4gICAgfVxuICAgIGNvbnN0IHtcbiAgICAgIHVuc3Vic2NyaWJlXG4gICAgfSA9IGFjdG9yLnN1YnNjcmliZShoYW5kbGVTdG9yZUNoYW5nZSk7XG4gICAgcmV0dXJuIHVuc3Vic2NyaWJlO1xuICB9LCBbYWN0b3JdKTtcbiAgY29uc3QgYm91bmRHZXRTbmFwc2hvdCA9IHVzZUNhbGxiYWNrKCgpID0+IGFjdG9yPy5nZXRTbmFwc2hvdCgpLCBbYWN0b3JdKTtcbiAgY29uc3Qgc2VsZWN0ZWRTbmFwc2hvdCA9IHVzZVN5bmNFeHRlcm5hbFN0b3JlV2l0aFNlbGVjdG9yKHN1YnNjcmliZSwgYm91bmRHZXRTbmFwc2hvdCwgYm91bmRHZXRTbmFwc2hvdCwgc2VsZWN0b3IsIGNvbXBhcmUpO1xuICByZXR1cm4gc2VsZWN0ZWRTbmFwc2hvdDtcbn1cblxuZnVuY3Rpb24gY3JlYXRlQWN0b3JDb250ZXh0KGFjdG9yTG9naWMsIGFjdG9yT3B0aW9ucykge1xuICBjb25zdCBSZWFjdENvbnRleHQgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlQ29udGV4dChudWxsKTtcbiAgY29uc3QgT3JpZ2luYWxQcm92aWRlciA9IFJlYWN0Q29udGV4dC5Qcm92aWRlcjtcbiAgZnVuY3Rpb24gUHJvdmlkZXIoe1xuICAgIGNoaWxkcmVuLFxuICAgIGxvZ2ljOiBwcm92aWRlZExvZ2ljID0gYWN0b3JMb2dpYyxcbiAgICBtYWNoaW5lLFxuICAgIG9wdGlvbnM6IHByb3ZpZGVkT3B0aW9uc1xuICB9KSB7XG4gICAgaWYgKG1hY2hpbmUpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVGhlIFwibWFjaGluZVwiIHByb3AgaGFzIGJlZW4gZGVwcmVjYXRlZC4gUGxlYXNlIHVzZSBcImxvZ2ljXCIgaW5zdGVhZC5gKTtcbiAgICB9XG4gICAgY29uc3QgYWN0b3IgPSB1c2VBY3RvclJlZihwcm92aWRlZExvZ2ljLCB7XG4gICAgICAuLi5hY3Rvck9wdGlvbnMsXG4gICAgICAuLi5wcm92aWRlZE9wdGlvbnNcbiAgICB9KTtcbiAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoT3JpZ2luYWxQcm92aWRlciwge1xuICAgICAgdmFsdWU6IGFjdG9yLFxuICAgICAgY2hpbGRyZW5cbiAgICB9KTtcbiAgfVxuXG4gIC8vIFRPRE86IGFkZCBwcm9wZXJ0aWVzIHRvIGFjdG9yIHJlZiB0byBtYWtlIG1vcmUgZGVzY3JpcHRpdmVcbiAgUHJvdmlkZXIuZGlzcGxheU5hbWUgPSBgQWN0b3JQcm92aWRlcmA7XG4gIGZ1bmN0aW9uIHVzZUNvbnRleHQoKSB7XG4gICAgY29uc3QgYWN0b3IgPSBSZWFjdC51c2VDb250ZXh0KFJlYWN0Q29udGV4dCk7XG4gICAgaWYgKCFhY3Rvcikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBZb3UgdXNlZCBhIGhvb2sgZnJvbSBcIiR7UHJvdmlkZXIuZGlzcGxheU5hbWV9XCIgYnV0IGl0J3Mgbm90IGluc2lkZSBhIDwke1Byb3ZpZGVyLmRpc3BsYXlOYW1lfT4gY29tcG9uZW50LmApO1xuICAgIH1cbiAgICByZXR1cm4gYWN0b3I7XG4gIH1cbiAgZnVuY3Rpb24gdXNlU2VsZWN0b3IkMShzZWxlY3RvciwgY29tcGFyZSkge1xuICAgIGNvbnN0IGFjdG9yID0gdXNlQ29udGV4dCgpO1xuICAgIHJldHVybiB1c2VTZWxlY3RvcihhY3Rvciwgc2VsZWN0b3IsIGNvbXBhcmUpO1xuICB9XG4gIHJldHVybiB7XG4gICAgUHJvdmlkZXI6IFByb3ZpZGVyLFxuICAgIHVzZUFjdG9yUmVmOiB1c2VDb250ZXh0LFxuICAgIHVzZVNlbGVjdG9yOiB1c2VTZWxlY3RvciQxXG4gIH07XG59XG5cbi8vIEZyb20gaHR0cHM6Ly9naXRodWIuY29tL3JlZHV4anMvcmVhY3QtcmVkdXgvYmxvYi83MjBmMGJhNzkyMzZjZGMzZTExMTVmNGVmOWE3NzYwYTIxNzg0YjQ4L3NyYy91dGlscy9zaGFsbG93RXF1YWwudHNcbmZ1bmN0aW9uIGlzKHgsIHkpIHtcbiAgaWYgKHggPT09IHkpIHtcbiAgICByZXR1cm4geCAhPT0gMCB8fCB5ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4geCAhPT0geCAmJiB5ICE9PSB5O1xuICB9XG59XG5mdW5jdGlvbiBzaGFsbG93RXF1YWwob2JqQSwgb2JqQikge1xuICBpZiAoaXMob2JqQSwgb2JqQikpIHJldHVybiB0cnVlO1xuICBpZiAodHlwZW9mIG9iakEgIT09ICdvYmplY3QnIHx8IG9iakEgPT09IG51bGwgfHwgdHlwZW9mIG9iakIgIT09ICdvYmplY3QnIHx8IG9iakIgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgY29uc3Qga2V5c0EgPSBPYmplY3Qua2V5cyhvYmpBKTtcbiAgY29uc3Qga2V5c0IgPSBPYmplY3Qua2V5cyhvYmpCKTtcbiAgaWYgKGtleXNBLmxlbmd0aCAhPT0ga2V5c0IubGVuZ3RoKSByZXR1cm4gZmFsc2U7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwga2V5c0EubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmpCLCBrZXlzQVtpXSkgfHwgIWlzKG9iakFba2V5c0FbaV1dLCBvYmpCW2tleXNBW2ldXSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIHVzZUFjdG9yKGxvZ2ljLCAuLi5bb3B0aW9uc10pIHtcbiAgaWYgKCEhbG9naWMgJiYgJ3NlbmQnIGluIGxvZ2ljICYmIHR5cGVvZiBsb2dpYy5zZW5kID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGB1c2VBY3RvcigpIGV4cGVjdHMgYWN0b3IgbG9naWMgKGUuZy4gYSBtYWNoaW5lKSwgYnV0IHJlY2VpdmVkIGFuIEFjdG9yUmVmLiBVc2UgdGhlIHVzZVNlbGVjdG9yKGFjdG9yUmVmLCAuLi4pIGhvb2sgaW5zdGVhZCB0byByZWFkIHRoZSBBY3RvclJlZidzIHNuYXBzaG90LmApO1xuICB9XG4gIGNvbnN0IGFjdG9yUmVmID0gdXNlSWRsZUFjdG9yUmVmKGxvZ2ljLCBvcHRpb25zKTtcbiAgY29uc3QgZ2V0U25hcHNob3QgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgcmV0dXJuIGFjdG9yUmVmLmdldFNuYXBzaG90KCk7XG4gIH0sIFthY3RvclJlZl0pO1xuICBjb25zdCBzdWJzY3JpYmUgPSB1c2VDYWxsYmFjayhoYW5kbGVTdG9yZUNoYW5nZSA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgdW5zdWJzY3JpYmVcbiAgICB9ID0gYWN0b3JSZWYuc3Vic2NyaWJlKGhhbmRsZVN0b3JlQ2hhbmdlKTtcbiAgICByZXR1cm4gdW5zdWJzY3JpYmU7XG4gIH0sIFthY3RvclJlZl0pO1xuICBjb25zdCBhY3RvclNuYXBzaG90ID0gdXNlU3luY0V4dGVybmFsU3RvcmUoc3Vic2NyaWJlLCBnZXRTbmFwc2hvdCwgZ2V0U25hcHNob3QpO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGFjdG9yUmVmLnN0YXJ0KCk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHN0b3BSb290V2l0aFJlaHlkcmF0aW9uKGFjdG9yUmVmKTtcbiAgICB9O1xuICB9LCBbYWN0b3JSZWZdKTtcbiAgcmV0dXJuIFthY3RvclNuYXBzaG90LCBhY3RvclJlZi5zZW5kLCBhY3RvclJlZl07XG59XG5cbi8qKiBAYWxpYXMgdXNlQWN0b3IgKi9cbmZ1bmN0aW9uIHVzZU1hY2hpbmUobWFjaGluZSwgLi4uW29wdGlvbnNdKSB7XG4gIHJldHVybiB1c2VBY3RvcihtYWNoaW5lLCBvcHRpb25zKTtcbn1cblxuZXhwb3J0IHsgY3JlYXRlQWN0b3JDb250ZXh0LCBzaGFsbG93RXF1YWwsIHVzZUFjdG9yLCB1c2VBY3RvclJlZiwgdXNlTWFjaGluZSwgdXNlU2VsZWN0b3IgfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@xstate/react/dist/xstate-react.development.esm.js\n");

/***/ })

};
;