"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@rexxars";
exports.ids = ["vendor-chunks/@rexxars"];
exports.modules = {

/***/ "(ssr)/../node_modules/@rexxars/react-json-inspector/dist/index.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@rexxars/react-json-inspector/dist/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsonInspector: () => (/* binding */ JsonInspector)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/../node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/../node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var debounce__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! debounce */ \"(ssr)/../node_modules/debounce/index.js\");\n/* harmony import */ var md5_o_matic__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! md5-o-matic */ \"(ssr)/../node_modules/md5-o-matic/lib/md5omatic.js\");\n\n\n\n\nlet id = Math.ceil(Math.random() * 10);\nconst uid = () => ++id;\nfunction type(value) {\n  return Object.prototype.toString.call(value).slice(8, -1);\n}\nfunction isPrimitive(value) {\n  const t = type(value);\n  return t !== \"Object\" && t !== \"Array\";\n}\nclass Highlighter extends react__WEBPACK_IMPORTED_MODULE_1__.Component {\n  shouldComponentUpdate(p) {\n    return p.highlight !== this.props.highlight;\n  }\n  render() {\n    const str = this.props.string || \"\", highlight = this.props.highlight || \"\", highlightStart = str.search(highlight);\n    if (!highlight || highlightStart === -1)\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children: str });\n    const highlightLength = highlight.source.length, highlightString = str.slice(\n      highlightStart,\n      highlightStart + highlightLength\n    );\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children: str.split(highlight).map(function(part, index) {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", { children: [\n        index > 0 ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { className: \"json-inspector__hl\", children: highlightString }) : null,\n        part\n      ] }, index);\n    }) });\n  }\n}\nfunction isObject(value) {\n  return typeof value == \"object\" && value !== null && !Array.isArray(value);\n}\nconst PATH_PREFIX = \".root.\";\nclass Leaf extends react__WEBPACK_IMPORTED_MODULE_1__.Component {\n  constructor(props) {\n    super(props), this.state = {\n      expanded: this._isInitiallyExpanded(this.props)\n    };\n  }\n  render() {\n    const { label, data, root, id: inputId } = this.props, id2 = \"id_\" + uid(), d = {\n      path: this.keypath(),\n      key: label.toString(),\n      value: data\n    }, onLabelClick = this._onClick.bind(this, d);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n      \"div\",\n      {\n        \"data-testid\": root ? \"leaf-root\" : \"leaf-child\",\n        \"aria-expanded\": this.state.expanded,\n        \"data-root\": root || void 0,\n        className: this.getClassName(),\n        id: \"leaf-\" + this._rootPath(),\n        children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n            \"input\",\n            {\n              className: \"json-inspector__radio\",\n              type: \"radio\",\n              name: id2,\n              id: inputId,\n              tabIndex: -1\n            }\n          ),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n            \"label\",\n            {\n              className: \"json-inspector__line\",\n              htmlFor: id2,\n              onClick: onLabelClick,\n              children: [\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: \"json-inspector__flatpath\", children: d.path }),\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", { className: \"json-inspector__key\", children: [\n                  this.format(d.key),\n                  \":\",\n                  this.renderInteractiveLabel(d.key, !0)\n                ] }),\n                this.renderTitle(),\n                this.renderShowOriginalButton()\n              ]\n            }\n          ),\n          this.renderChildren()\n        ]\n      }\n    );\n  }\n  renderTitle() {\n    const data = this.data(), t = type(data);\n    if (Array.isArray(data)) {\n      const length = data.length;\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", { className: \"json-inspector__value json-inspector__value_helper\", children: [\n        length > 0 ? \"[\\u2026] \" : \"[] \",\n        items(length)\n      ] });\n    }\n    if (typeof data == \"object\" && data !== null) {\n      const keys = Object.keys(data).length;\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", { className: \"json-inspector__value json-inspector__value_helper\", children: [\n        keys > 0 ? \"{\\u2026} \" : \"{} \",\n        properties(keys)\n      ] });\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n      \"span\",\n      {\n        className: \"json-inspector__value json-inspector__value_\" + t.toLowerCase(),\n        children: [\n          this.format(String(data)),\n          this.renderInteractiveLabel(data, !1)\n        ]\n      }\n    );\n  }\n  renderChildren() {\n    const {\n      verboseShowOriginal,\n      query,\n      id: id2,\n      isExpanded,\n      interactiveLabel,\n      onClick,\n      getOriginal\n    } = this.props, childPrefix = this._rootPath(), data = this.data();\n    return this.state.expanded && (isObject(data) || Array.isArray(data)) ? Object.keys(data).map((key) => {\n      const value = data[key], shouldGetOriginal = !this.state.original || (verboseShowOriginal ? query : !1);\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        Leaf,\n        {\n          data: value,\n          label: key,\n          prefix: childPrefix,\n          onClick,\n          id: id2,\n          query,\n          getOriginal: shouldGetOriginal ? getOriginal : void 0,\n          isExpanded,\n          interactiveLabel,\n          verboseShowOriginal\n        },\n        getLeafKey(key, value)\n      );\n    }) : null;\n  }\n  renderShowOriginalButton() {\n    const { data, getOriginal, query } = this.props;\n    return isPrimitive(data) || this.state.original || !getOriginal || !query || query.test(this.keypath()) ? null : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      \"span\",\n      {\n        className: \"json-inspector__show-original\",\n        onClick: this._onShowOriginalClick\n      }\n    );\n  }\n  renderInteractiveLabel(originalValue, isKey) {\n    const InteractiveLabel = this.props.interactiveLabel;\n    return typeof InteractiveLabel == \"function\" ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      InteractiveLabel,\n      {\n        value: String(originalValue),\n        originalValue,\n        isKey,\n        keypath: this.keypath()\n      }\n    ) : null;\n  }\n  static getDerivedStateFromProps(props, state) {\n    return props.query ? {\n      expanded: !props.query.test(props.label)\n    } : null;\n  }\n  componentDidUpdate(prevProps) {\n    prevProps.query && !this.props.query && this.setState({\n      expanded: this._isInitiallyExpanded(this.props)\n    });\n  }\n  _rootPath() {\n    return (this.props.prefix || \"\") + \".\" + this.props.label;\n  }\n  keypath() {\n    return this._rootPath().slice(PATH_PREFIX.length);\n  }\n  data() {\n    return this.state.original || this.props.data;\n  }\n  format(str) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Highlighter, { string: str, highlight: this.props.query });\n  }\n  getClassName() {\n    let cn = \"json-inspector__leaf\";\n    return this.props.root && (cn += \" json-inspector__leaf_root\"), this.state.expanded && (cn += \" json-inspector__leaf_expanded\"), isPrimitive(this.props.data) || (cn += \" json-inspector__leaf_composite\"), cn;\n  }\n  toggle() {\n    this.setState({\n      expanded: !this.state.expanded\n    });\n  }\n  _onClick(data, e) {\n    this.toggle(), this.props.onClick && this.props.onClick(data), e.stopPropagation();\n  }\n  _onShowOriginalClick = (e) => {\n    this.setState({\n      original: this.props.getOriginal?.(this.keypath())\n    }), e.stopPropagation();\n  };\n  _isInitiallyExpanded(p) {\n    if (p.root)\n      return !0;\n    const keypath = this.keypath();\n    return p.query ? !p.query.test(keypath) && typeof p.getOriginal == \"function\" : p.isExpanded ? p.isExpanded(keypath, p.data) : !1;\n  }\n}\nfunction items(count) {\n  return count + (count === 1 ? \" item\" : \" items\");\n}\nfunction properties(count) {\n  return count + (count === 1 ? \" property\" : \" properties\");\n}\nfunction getLeafKey(key, value) {\n  if (isPrimitive(value)) {\n    const hash = md5_o_matic__WEBPACK_IMPORTED_MODULE_3__(String(value));\n    return key + \":\" + hash;\n  } else\n    return key + \"[\" + type(value) + \"]\";\n}\nconst noop = (...args) => {\n}, SearchBar = ({ onChange = noop }) => {\n  const onSearchChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (evt) => onChange(evt.target.value),\n    [onChange]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"input\",\n    {\n      className: \"json-inspector__search\",\n      type: \"search\",\n      placeholder: \"Search\",\n      onChange: onSearchChange\n    }\n  );\n};\nfunction isEmpty(object) {\n  return isObject(object) ? Object.keys(object).length === 0 : Array.isArray(object) ? object.length === 0 : object === null || typeof object != \"string\" || typeof object != \"number\" ? !0 : Object.keys(object).length === 0;\n}\nconst getFilterer = memoize(\n  (data, opts) => {\n    const options = opts || { cacheResults: !0 }, cache = {};\n    return function(query) {\n      if (!options.cacheResults)\n        return find(data, query, options);\n      let subquery;\n      if (!cache[query]) {\n        for (var i = query.length - 1; i > 0; i -= 1)\n          if (subquery = query.slice(0, i), cache[subquery]) {\n            cache[query] = find(cache[subquery], query, options);\n            break;\n          }\n      }\n      return cache[query] || (cache[query] = find(data, query, options)), cache[query];\n    };\n  }\n);\nfunction find(data, query, options) {\n  return !isObject(data) && !Array.isArray(data) ? {} : Object.keys(data).reduce(function(acc, key) {\n    const value = data[key];\n    let matches;\n    return value ? typeof value != \"object\" ? ((contains(query, key, options) || contains(query, value, options)) && (acc[key] = value), acc) : contains(query, key, options) ? (acc[key] = value, acc) : (matches = find(value, query, options), isEmpty(matches) || Object.assign(acc, pair(key, matches)), acc) : acc;\n  }, {});\n}\nfunction contains(query, value, options) {\n  if (!value)\n    return !1;\n  var haystack = String(value), needle = query;\n  return options?.ignoreCase && (haystack = haystack.toLowerCase(), needle = needle.toLowerCase()), haystack.indexOf(needle) !== -1;\n}\nfunction pair(key, value) {\n  return { [key]: value };\n}\nfunction memoize(fn) {\n  let lastData, lastOptions, lastResult;\n  return (data, options) => ((!lastResult || data !== lastData || options !== lastOptions) && (lastData = data, lastOptions = options, lastResult = fn(data, options)), lastResult);\n}\nconst PATH_DELIMITER = \".\";\nfunction integer(str) {\n  return parseInt(str, 10);\n}\nfunction lens(data, path) {\n  var p = path.split(PATH_DELIMITER), segment = p.shift();\n  if (!segment)\n    return data;\n  if (Array.isArray(data) && data[integer(segment)])\n    return lens(data[integer(segment)], p.join(PATH_DELIMITER));\n  if (isObject(data) && segment in data)\n    return lens(data[segment], p.join(PATH_DELIMITER));\n}\nconst defaultValidateQuery = (query) => query.length >= 2, defaultFilterOptions = { cacheResults: !0, ignoreCase: !1 };\nclass JsonInspector extends react__WEBPACK_IMPORTED_MODULE_1__.Component {\n  static defaultProps = {\n    data: null,\n    search: SearchBar,\n    searchOptions: {\n      debounceTime: 0\n    },\n    className: \"\",\n    id: \"json-\" + Date.now(),\n    onClick: noop,\n    filterOptions: {\n      cacheResults: !0,\n      ignoreCase: !1\n    },\n    validateQuery: function(query) {\n      return query.length >= 2;\n    },\n    /**\n     * Decide whether the leaf node at given `keypath` should be expanded initially.\n     *\n     * @param keypath - Path to the node\n     * @param value - Value of the node\n     * @returns True if node should be expanded, false otherwise\n     */\n    isExpanded: function(keypath, value) {\n      return !1;\n    },\n    verboseShowOriginal: !1\n  };\n  constructor(props) {\n    super(props), this.state = {\n      query: \"\",\n      filterer: getFilterer(props.data, props.filterOptions)\n    };\n  }\n  render() {\n    const {\n      data: rawData,\n      className,\n      onClick,\n      id: id2,\n      isExpanded,\n      interactiveLabel,\n      verboseShowOriginal,\n      filterOptions = defaultFilterOptions,\n      validateQuery = defaultValidateQuery\n    } = this.props, isQueryValid = this.state.query !== \"\" && validateQuery(this.state.query), data = isQueryValid ? this.state.filterer(this.state.query) : rawData, isNotFound = isQueryValid && isEmpty(data);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n      \"div\",\n      {\n        \"data-testid\": \"json-inspector\",\n        className: \"json-inspector \" + className,\n        children: [\n          this.renderToolbar(),\n          isNotFound ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: \"json-inspector__not-found\", children: \"Nothing found\" }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n            Leaf,\n            {\n              data,\n              onClick,\n              id: id2,\n              getOriginal: this.getOriginal,\n              query: isQueryValid ? new RegExp(\n                this.state.query,\n                filterOptions.ignoreCase ? \"i\" : \"\"\n              ) : null,\n              label: \"root\",\n              root: !0,\n              isExpanded,\n              interactiveLabel,\n              verboseShowOriginal\n            }\n          )\n        ]\n      }\n    );\n  }\n  renderToolbar() {\n    const Search = this.props.search;\n    return Search ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: \"json-inspector__toolbar\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      Search,\n      {\n        onChange: debounce__WEBPACK_IMPORTED_MODULE_2__(\n          this.search,\n          this.props.searchOptions?.debounceTime\n        ),\n        data: this.props.data,\n        query: this.state.query\n      }\n    ) }) : null;\n  }\n  search = (query) => {\n    this.setState({ query });\n  };\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const filterer = getFilterer(nextProps.data, nextProps.filterOptions);\n    return filterer === prevState.filterer ? null : { ...prevState, filterer };\n  }\n  shouldComponentUpdate(nextProps, prevState) {\n    return prevState.query !== this.state.query || nextProps.data !== this.props.data || nextProps.onClick !== this.props.onClick;\n  }\n  createFilterer = (data, options) => {\n    this.setState({\n      filterer: getFilterer(data, options)\n    });\n  };\n  getOriginal = (path) => lens(this.props.data, path);\n}\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@rexxars/react-json-inspector/dist/index.js\n");

/***/ })

};
;